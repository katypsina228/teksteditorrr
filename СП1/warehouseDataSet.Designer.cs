//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace СП1 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("warehouseDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class warehouseDataSet : global::System.Data.DataSet {
        
        private ЗаказчикDataTable tableЗаказчик;
        
        private КатегорияDataTable tableКатегория;
        
        private КладовщикDataTable tableКладовщик;
        
        private Материально_ответственное_лицоDataTable tableМатериально_ответственное_лицо;
        
        private НакладнаяDataTable tableНакладная;
        
        private ПоставщикDataTable tableПоставщик;
        
        private СотрудникиDataTable tableСотрудники;
        
        private ТорварDataTable tableТорвар;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public warehouseDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected warehouseDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Заказчик"] != null)) {
                    base.Tables.Add(new ЗаказчикDataTable(ds.Tables["Заказчик"]));
                }
                if ((ds.Tables["Категория"] != null)) {
                    base.Tables.Add(new КатегорияDataTable(ds.Tables["Категория"]));
                }
                if ((ds.Tables["Кладовщик"] != null)) {
                    base.Tables.Add(new КладовщикDataTable(ds.Tables["Кладовщик"]));
                }
                if ((ds.Tables["Материально_ответственное_лицо"] != null)) {
                    base.Tables.Add(new Материально_ответственное_лицоDataTable(ds.Tables["Материально_ответственное_лицо"]));
                }
                if ((ds.Tables["Накладная"] != null)) {
                    base.Tables.Add(new НакладнаяDataTable(ds.Tables["Накладная"]));
                }
                if ((ds.Tables["Поставщик"] != null)) {
                    base.Tables.Add(new ПоставщикDataTable(ds.Tables["Поставщик"]));
                }
                if ((ds.Tables["Сотрудники"] != null)) {
                    base.Tables.Add(new СотрудникиDataTable(ds.Tables["Сотрудники"]));
                }
                if ((ds.Tables["Торвар"] != null)) {
                    base.Tables.Add(new ТорварDataTable(ds.Tables["Торвар"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ЗаказчикDataTable Заказчик {
            get {
                return this.tableЗаказчик;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public КатегорияDataTable Категория {
            get {
                return this.tableКатегория;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public КладовщикDataTable Кладовщик {
            get {
                return this.tableКладовщик;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Материально_ответственное_лицоDataTable Материально_ответственное_лицо {
            get {
                return this.tableМатериально_ответственное_лицо;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public НакладнаяDataTable Накладная {
            get {
                return this.tableНакладная;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ПоставщикDataTable Поставщик {
            get {
                return this.tableПоставщик;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public СотрудникиDataTable Сотрудники {
            get {
                return this.tableСотрудники;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ТорварDataTable Торвар {
            get {
                return this.tableТорвар;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            warehouseDataSet cln = ((warehouseDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Заказчик"] != null)) {
                    base.Tables.Add(new ЗаказчикDataTable(ds.Tables["Заказчик"]));
                }
                if ((ds.Tables["Категория"] != null)) {
                    base.Tables.Add(new КатегорияDataTable(ds.Tables["Категория"]));
                }
                if ((ds.Tables["Кладовщик"] != null)) {
                    base.Tables.Add(new КладовщикDataTable(ds.Tables["Кладовщик"]));
                }
                if ((ds.Tables["Материально_ответственное_лицо"] != null)) {
                    base.Tables.Add(new Материально_ответственное_лицоDataTable(ds.Tables["Материально_ответственное_лицо"]));
                }
                if ((ds.Tables["Накладная"] != null)) {
                    base.Tables.Add(new НакладнаяDataTable(ds.Tables["Накладная"]));
                }
                if ((ds.Tables["Поставщик"] != null)) {
                    base.Tables.Add(new ПоставщикDataTable(ds.Tables["Поставщик"]));
                }
                if ((ds.Tables["Сотрудники"] != null)) {
                    base.Tables.Add(new СотрудникиDataTable(ds.Tables["Сотрудники"]));
                }
                if ((ds.Tables["Торвар"] != null)) {
                    base.Tables.Add(new ТорварDataTable(ds.Tables["Торвар"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableЗаказчик = ((ЗаказчикDataTable)(base.Tables["Заказчик"]));
            if ((initTable == true)) {
                if ((this.tableЗаказчик != null)) {
                    this.tableЗаказчик.InitVars();
                }
            }
            this.tableКатегория = ((КатегорияDataTable)(base.Tables["Категория"]));
            if ((initTable == true)) {
                if ((this.tableКатегория != null)) {
                    this.tableКатегория.InitVars();
                }
            }
            this.tableКладовщик = ((КладовщикDataTable)(base.Tables["Кладовщик"]));
            if ((initTable == true)) {
                if ((this.tableКладовщик != null)) {
                    this.tableКладовщик.InitVars();
                }
            }
            this.tableМатериально_ответственное_лицо = ((Материально_ответственное_лицоDataTable)(base.Tables["Материально_ответственное_лицо"]));
            if ((initTable == true)) {
                if ((this.tableМатериально_ответственное_лицо != null)) {
                    this.tableМатериально_ответственное_лицо.InitVars();
                }
            }
            this.tableНакладная = ((НакладнаяDataTable)(base.Tables["Накладная"]));
            if ((initTable == true)) {
                if ((this.tableНакладная != null)) {
                    this.tableНакладная.InitVars();
                }
            }
            this.tableПоставщик = ((ПоставщикDataTable)(base.Tables["Поставщик"]));
            if ((initTable == true)) {
                if ((this.tableПоставщик != null)) {
                    this.tableПоставщик.InitVars();
                }
            }
            this.tableСотрудники = ((СотрудникиDataTable)(base.Tables["Сотрудники"]));
            if ((initTable == true)) {
                if ((this.tableСотрудники != null)) {
                    this.tableСотрудники.InitVars();
                }
            }
            this.tableТорвар = ((ТорварDataTable)(base.Tables["Торвар"]));
            if ((initTable == true)) {
                if ((this.tableТорвар != null)) {
                    this.tableТорвар.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "warehouseDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/warehouseDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableЗаказчик = new ЗаказчикDataTable();
            base.Tables.Add(this.tableЗаказчик);
            this.tableКатегория = new КатегорияDataTable();
            base.Tables.Add(this.tableКатегория);
            this.tableКладовщик = new КладовщикDataTable();
            base.Tables.Add(this.tableКладовщик);
            this.tableМатериально_ответственное_лицо = new Материально_ответственное_лицоDataTable();
            base.Tables.Add(this.tableМатериально_ответственное_лицо);
            this.tableНакладная = new НакладнаяDataTable();
            base.Tables.Add(this.tableНакладная);
            this.tableПоставщик = new ПоставщикDataTable();
            base.Tables.Add(this.tableПоставщик);
            this.tableСотрудники = new СотрудникиDataTable();
            base.Tables.Add(this.tableСотрудники);
            this.tableТорвар = new ТорварDataTable();
            base.Tables.Add(this.tableТорвар);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeЗаказчик() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeКатегория() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeКладовщик() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeМатериально_ответственное_лицо() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeНакладная() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeПоставщик() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeСотрудники() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeТорвар() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            warehouseDataSet ds = new warehouseDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ЗаказчикRowChangeEventHandler(object sender, ЗаказчикRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void КатегорияRowChangeEventHandler(object sender, КатегорияRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void КладовщикRowChangeEventHandler(object sender, КладовщикRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void Материально_ответственное_лицоRowChangeEventHandler(object sender, Материально_ответственное_лицоRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void НакладнаяRowChangeEventHandler(object sender, НакладнаяRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ПоставщикRowChangeEventHandler(object sender, ПоставщикRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void СотрудникиRowChangeEventHandler(object sender, СотрудникиRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ТорварRowChangeEventHandler(object sender, ТорварRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ЗаказчикDataTable : global::System.Data.TypedTableBase<ЗаказчикRow> {
            
            private global::System.Data.DataColumn columnid_Заказчик;
            
            private global::System.Data.DataColumn columnФИО;
            
            private global::System.Data.DataColumn columnНазвание_товара;
            
            private global::System.Data.DataColumn columnНомер_товара;
            
            private global::System.Data.DataColumn columnПаспортные_данные;
            
            private global::System.Data.DataColumn columnВозраст;
            
            private global::System.Data.DataColumn columnГород;
            
            private global::System.Data.DataColumn columnСтрана;
            
            private global::System.Data.DataColumn columnРегион;
            
            private global::System.Data.DataColumn columnАдрес;
            
            private global::System.Data.DataColumn columnНомер_телефона;
            
            private global::System.Data.DataColumn columnДата_когда_был_сделан_заказ;
            
            private global::System.Data.DataColumn columnДата_отправки;
            
            private global::System.Data.DataColumn columnОформлена_накладная;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ЗаказчикDataTable() {
                this.TableName = "Заказчик";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ЗаказчикDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ЗаказчикDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn id_ЗаказчикColumn {
                get {
                    return this.columnid_Заказчик;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ФИОColumn {
                get {
                    return this.columnФИО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Название_товараColumn {
                get {
                    return this.columnНазвание_товара;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Номер_товараColumn {
                get {
                    return this.columnНомер_товара;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Паспортные_данныеColumn {
                get {
                    return this.columnПаспортные_данные;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ВозрастColumn {
                get {
                    return this.columnВозраст;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ГородColumn {
                get {
                    return this.columnГород;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn СтранаColumn {
                get {
                    return this.columnСтрана;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn РегионColumn {
                get {
                    return this.columnРегион;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn АдресColumn {
                get {
                    return this.columnАдрес;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Номер_телефонаColumn {
                get {
                    return this.columnНомер_телефона;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Дата_когда_был_сделан_заказColumn {
                get {
                    return this.columnДата_когда_был_сделан_заказ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Дата_отправкиColumn {
                get {
                    return this.columnДата_отправки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Оформлена_накладнаяColumn {
                get {
                    return this.columnОформлена_накладная;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ЗаказчикRow this[int index] {
                get {
                    return ((ЗаказчикRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ЗаказчикRowChangeEventHandler ЗаказчикRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ЗаказчикRowChangeEventHandler ЗаказчикRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ЗаказчикRowChangeEventHandler ЗаказчикRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ЗаказчикRowChangeEventHandler ЗаказчикRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddЗаказчикRow(ЗаказчикRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ЗаказчикRow AddЗаказчикRow(long id_Заказчик, string ФИО, string Название_товара, long Номер_товара, long Паспортные_данные, long Возраст, string Город, string Страна, string Регион, string Адрес, long Номер_телефона, System.DateTime Дата_когда_был_сделан_заказ, System.DateTime Дата_отправки, string Оформлена_накладная) {
                ЗаказчикRow rowЗаказчикRow = ((ЗаказчикRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id_Заказчик,
                        ФИО,
                        Название_товара,
                        Номер_товара,
                        Паспортные_данные,
                        Возраст,
                        Город,
                        Страна,
                        Регион,
                        Адрес,
                        Номер_телефона,
                        Дата_когда_был_сделан_заказ,
                        Дата_отправки,
                        Оформлена_накладная};
                rowЗаказчикRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowЗаказчикRow);
                return rowЗаказчикRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ЗаказчикRow FindByid_Заказчик(long id_Заказчик) {
                return ((ЗаказчикRow)(this.Rows.Find(new object[] {
                            id_Заказчик})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ЗаказчикDataTable cln = ((ЗаказчикDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ЗаказчикDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnid_Заказчик = base.Columns["id_Заказчик"];
                this.columnФИО = base.Columns["ФИО"];
                this.columnНазвание_товара = base.Columns["Название_товара"];
                this.columnНомер_товара = base.Columns["Номер_товара"];
                this.columnПаспортные_данные = base.Columns["Паспортные_данные"];
                this.columnВозраст = base.Columns["Возраст"];
                this.columnГород = base.Columns["Город"];
                this.columnСтрана = base.Columns["Страна"];
                this.columnРегион = base.Columns["Регион"];
                this.columnАдрес = base.Columns["Адрес"];
                this.columnНомер_телефона = base.Columns["Номер_телефона"];
                this.columnДата_когда_был_сделан_заказ = base.Columns["Дата_когда_был_сделан_заказ"];
                this.columnДата_отправки = base.Columns["Дата_отправки"];
                this.columnОформлена_накладная = base.Columns["Оформлена_накладная"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnid_Заказчик = new global::System.Data.DataColumn("id_Заказчик", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_Заказчик);
                this.columnФИО = new global::System.Data.DataColumn("ФИО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО);
                this.columnНазвание_товара = new global::System.Data.DataColumn("Название_товара", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНазвание_товара);
                this.columnНомер_товара = new global::System.Data.DataColumn("Номер_товара", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_товара);
                this.columnПаспортные_данные = new global::System.Data.DataColumn("Паспортные_данные", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПаспортные_данные);
                this.columnВозраст = new global::System.Data.DataColumn("Возраст", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВозраст);
                this.columnГород = new global::System.Data.DataColumn("Город", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГород);
                this.columnСтрана = new global::System.Data.DataColumn("Страна", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСтрана);
                this.columnРегион = new global::System.Data.DataColumn("Регион", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРегион);
                this.columnАдрес = new global::System.Data.DataColumn("Адрес", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnАдрес);
                this.columnНомер_телефона = new global::System.Data.DataColumn("Номер_телефона", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_телефона);
                this.columnДата_когда_был_сделан_заказ = new global::System.Data.DataColumn("Дата_когда_был_сделан_заказ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_когда_был_сделан_заказ);
                this.columnДата_отправки = new global::System.Data.DataColumn("Дата_отправки", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_отправки);
                this.columnОформлена_накладная = new global::System.Data.DataColumn("Оформлена_накладная", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОформлена_накладная);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_Заказчик}, true));
                this.columnid_Заказчик.AllowDBNull = false;
                this.columnid_Заказчик.Unique = true;
                this.columnФИО.AllowDBNull = false;
                this.columnФИО.MaxLength = 75;
                this.columnНазвание_товара.AllowDBNull = false;
                this.columnНазвание_товара.MaxLength = 50;
                this.columnНомер_товара.AllowDBNull = false;
                this.columnПаспортные_данные.AllowDBNull = false;
                this.columnВозраст.AllowDBNull = false;
                this.columnГород.AllowDBNull = false;
                this.columnГород.MaxLength = 50;
                this.columnСтрана.AllowDBNull = false;
                this.columnСтрана.MaxLength = 50;
                this.columnРегион.AllowDBNull = false;
                this.columnРегион.MaxLength = 50;
                this.columnАдрес.AllowDBNull = false;
                this.columnАдрес.MaxLength = 50;
                this.columnНомер_телефона.AllowDBNull = false;
                this.columnДата_когда_был_сделан_заказ.AllowDBNull = false;
                this.columnДата_отправки.AllowDBNull = false;
                this.columnОформлена_накладная.AllowDBNull = false;
                this.columnОформлена_накладная.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ЗаказчикRow NewЗаказчикRow() {
                return ((ЗаказчикRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ЗаказчикRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ЗаказчикRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ЗаказчикRowChanged != null)) {
                    this.ЗаказчикRowChanged(this, new ЗаказчикRowChangeEvent(((ЗаказчикRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ЗаказчикRowChanging != null)) {
                    this.ЗаказчикRowChanging(this, new ЗаказчикRowChangeEvent(((ЗаказчикRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ЗаказчикRowDeleted != null)) {
                    this.ЗаказчикRowDeleted(this, new ЗаказчикRowChangeEvent(((ЗаказчикRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ЗаказчикRowDeleting != null)) {
                    this.ЗаказчикRowDeleting(this, new ЗаказчикRowChangeEvent(((ЗаказчикRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveЗаказчикRow(ЗаказчикRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                warehouseDataSet ds = new warehouseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ЗаказчикDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class КатегорияDataTable : global::System.Data.TypedTableBase<КатегорияRow> {
            
            private global::System.Data.DataColumn columnid_Категория;
            
            private global::System.Data.DataColumn columnИнструменты;
            
            private global::System.Data.DataColumn columnПриборы;
            
            private global::System.Data.DataColumn columnАппараты;
            
            private global::System.Data.DataColumn columnОборудование;
            
            private global::System.Data.DataColumn columnРасходные_материалы;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КатегорияDataTable() {
                this.TableName = "Категория";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal КатегорияDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected КатегорияDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn id_КатегорияColumn {
                get {
                    return this.columnid_Категория;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ИнструментыColumn {
                get {
                    return this.columnИнструменты;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ПриборыColumn {
                get {
                    return this.columnПриборы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn АппаратыColumn {
                get {
                    return this.columnАппараты;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ОборудованиеColumn {
                get {
                    return this.columnОборудование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Расходные_материалыColumn {
                get {
                    return this.columnРасходные_материалы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КатегорияRow this[int index] {
                get {
                    return ((КатегорияRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event КатегорияRowChangeEventHandler КатегорияRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event КатегорияRowChangeEventHandler КатегорияRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event КатегорияRowChangeEventHandler КатегорияRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event КатегорияRowChangeEventHandler КатегорияRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddКатегорияRow(КатегорияRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КатегорияRow AddКатегорияRow(long id_Категория, long Инструменты, long Приборы, long Аппараты, long Оборудование, long Расходные_материалы) {
                КатегорияRow rowКатегорияRow = ((КатегорияRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id_Категория,
                        Инструменты,
                        Приборы,
                        Аппараты,
                        Оборудование,
                        Расходные_материалы};
                rowКатегорияRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowКатегорияRow);
                return rowКатегорияRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КатегорияRow FindByid_Категория(long id_Категория) {
                return ((КатегорияRow)(this.Rows.Find(new object[] {
                            id_Категория})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                КатегорияDataTable cln = ((КатегорияDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new КатегорияDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnid_Категория = base.Columns["id_Категория"];
                this.columnИнструменты = base.Columns["Инструменты"];
                this.columnПриборы = base.Columns["Приборы"];
                this.columnАппараты = base.Columns["Аппараты"];
                this.columnОборудование = base.Columns["Оборудование"];
                this.columnРасходные_материалы = base.Columns["Расходные_материалы"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnid_Категория = new global::System.Data.DataColumn("id_Категория", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_Категория);
                this.columnИнструменты = new global::System.Data.DataColumn("Инструменты", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИнструменты);
                this.columnПриборы = new global::System.Data.DataColumn("Приборы", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПриборы);
                this.columnАппараты = new global::System.Data.DataColumn("Аппараты", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnАппараты);
                this.columnОборудование = new global::System.Data.DataColumn("Оборудование", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОборудование);
                this.columnРасходные_материалы = new global::System.Data.DataColumn("Расходные_материалы", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРасходные_материалы);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_Категория}, true));
                this.columnid_Категория.AllowDBNull = false;
                this.columnid_Категория.Unique = true;
                this.columnИнструменты.AllowDBNull = false;
                this.columnПриборы.AllowDBNull = false;
                this.columnАппараты.AllowDBNull = false;
                this.columnОборудование.AllowDBNull = false;
                this.columnРасходные_материалы.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КатегорияRow NewКатегорияRow() {
                return ((КатегорияRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new КатегорияRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(КатегорияRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.КатегорияRowChanged != null)) {
                    this.КатегорияRowChanged(this, new КатегорияRowChangeEvent(((КатегорияRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.КатегорияRowChanging != null)) {
                    this.КатегорияRowChanging(this, new КатегорияRowChangeEvent(((КатегорияRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.КатегорияRowDeleted != null)) {
                    this.КатегорияRowDeleted(this, new КатегорияRowChangeEvent(((КатегорияRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.КатегорияRowDeleting != null)) {
                    this.КатегорияRowDeleting(this, new КатегорияRowChangeEvent(((КатегорияRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveКатегорияRow(КатегорияRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                warehouseDataSet ds = new warehouseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "КатегорияDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class КладовщикDataTable : global::System.Data.TypedTableBase<КладовщикRow> {
            
            private global::System.Data.DataColumn columnid_Кладовщик;
            
            private global::System.Data.DataColumn columnid_Сотрудники;
            
            private global::System.Data.DataColumn columnФИО;
            
            private global::System.Data.DataColumn columnЗарплата;
            
            private global::System.Data.DataColumn columnОтгулы;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КладовщикDataTable() {
                this.TableName = "Кладовщик";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal КладовщикDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected КладовщикDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn id_КладовщикColumn {
                get {
                    return this.columnid_Кладовщик;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn id_СотрудникиColumn {
                get {
                    return this.columnid_Сотрудники;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ФИОColumn {
                get {
                    return this.columnФИО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ЗарплатаColumn {
                get {
                    return this.columnЗарплата;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ОтгулыColumn {
                get {
                    return this.columnОтгулы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КладовщикRow this[int index] {
                get {
                    return ((КладовщикRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event КладовщикRowChangeEventHandler КладовщикRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event КладовщикRowChangeEventHandler КладовщикRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event КладовщикRowChangeEventHandler КладовщикRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event КладовщикRowChangeEventHandler КладовщикRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddКладовщикRow(КладовщикRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КладовщикRow AddКладовщикRow(long id_Кладовщик, long id_Сотрудники, string ФИО, long Зарплата, long Отгулы) {
                КладовщикRow rowКладовщикRow = ((КладовщикRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id_Кладовщик,
                        id_Сотрудники,
                        ФИО,
                        Зарплата,
                        Отгулы};
                rowКладовщикRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowКладовщикRow);
                return rowКладовщикRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КладовщикRow FindByid_Кладовщик(long id_Кладовщик) {
                return ((КладовщикRow)(this.Rows.Find(new object[] {
                            id_Кладовщик})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                КладовщикDataTable cln = ((КладовщикDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new КладовщикDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnid_Кладовщик = base.Columns["id_Кладовщик"];
                this.columnid_Сотрудники = base.Columns["id_Сотрудники"];
                this.columnФИО = base.Columns["ФИО"];
                this.columnЗарплата = base.Columns["Зарплата"];
                this.columnОтгулы = base.Columns["Отгулы"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnid_Кладовщик = new global::System.Data.DataColumn("id_Кладовщик", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_Кладовщик);
                this.columnid_Сотрудники = new global::System.Data.DataColumn("id_Сотрудники", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_Сотрудники);
                this.columnФИО = new global::System.Data.DataColumn("ФИО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО);
                this.columnЗарплата = new global::System.Data.DataColumn("Зарплата", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗарплата);
                this.columnОтгулы = new global::System.Data.DataColumn("Отгулы", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОтгулы);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_Кладовщик}, true));
                this.columnid_Кладовщик.AllowDBNull = false;
                this.columnid_Кладовщик.Unique = true;
                this.columnФИО.AllowDBNull = false;
                this.columnФИО.MaxLength = 75;
                this.columnЗарплата.AllowDBNull = false;
                this.columnОтгулы.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КладовщикRow NewКладовщикRow() {
                return ((КладовщикRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new КладовщикRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(КладовщикRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.КладовщикRowChanged != null)) {
                    this.КладовщикRowChanged(this, new КладовщикRowChangeEvent(((КладовщикRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.КладовщикRowChanging != null)) {
                    this.КладовщикRowChanging(this, new КладовщикRowChangeEvent(((КладовщикRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.КладовщикRowDeleted != null)) {
                    this.КладовщикRowDeleted(this, new КладовщикRowChangeEvent(((КладовщикRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.КладовщикRowDeleting != null)) {
                    this.КладовщикRowDeleting(this, new КладовщикRowChangeEvent(((КладовщикRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveКладовщикRow(КладовщикRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                warehouseDataSet ds = new warehouseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "КладовщикDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Материально_ответственное_лицоDataTable : global::System.Data.TypedTableBase<Материально_ответственное_лицоRow> {
            
            private global::System.Data.DataColumn columnid_Материально_ответственное_лицо;
            
            private global::System.Data.DataColumn columnid_Сотрудники;
            
            private global::System.Data.DataColumn columnФИО;
            
            private global::System.Data.DataColumn columnЗарплата;
            
            private global::System.Data.DataColumn columnОтгулы;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Материально_ответственное_лицоDataTable() {
                this.TableName = "Материально_ответственное_лицо";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Материально_ответственное_лицоDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected Материально_ответственное_лицоDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn id_Материально_ответственное_лицоColumn {
                get {
                    return this.columnid_Материально_ответственное_лицо;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn id_СотрудникиColumn {
                get {
                    return this.columnid_Сотрудники;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ФИОColumn {
                get {
                    return this.columnФИО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ЗарплатаColumn {
                get {
                    return this.columnЗарплата;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ОтгулыColumn {
                get {
                    return this.columnОтгулы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Материально_ответственное_лицоRow this[int index] {
                get {
                    return ((Материально_ответственное_лицоRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Материально_ответственное_лицоRowChangeEventHandler Материально_ответственное_лицоRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Материально_ответственное_лицоRowChangeEventHandler Материально_ответственное_лицоRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Материально_ответственное_лицоRowChangeEventHandler Материально_ответственное_лицоRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Материально_ответственное_лицоRowChangeEventHandler Материально_ответственное_лицоRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddМатериально_ответственное_лицоRow(Материально_ответственное_лицоRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Материально_ответственное_лицоRow AddМатериально_ответственное_лицоRow(long id_Материально_ответственное_лицо, long id_Сотрудники, string ФИО, long Зарплата, long Отгулы) {
                Материально_ответственное_лицоRow rowМатериально_ответственное_лицоRow = ((Материально_ответственное_лицоRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id_Материально_ответственное_лицо,
                        id_Сотрудники,
                        ФИО,
                        Зарплата,
                        Отгулы};
                rowМатериально_ответственное_лицоRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowМатериально_ответственное_лицоRow);
                return rowМатериально_ответственное_лицоRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Материально_ответственное_лицоRow FindByid_Материально_ответственное_лицо(long id_Материально_ответственное_лицо) {
                return ((Материально_ответственное_лицоRow)(this.Rows.Find(new object[] {
                            id_Материально_ответственное_лицо})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Материально_ответственное_лицоDataTable cln = ((Материально_ответственное_лицоDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Материально_ответственное_лицоDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnid_Материально_ответственное_лицо = base.Columns["id_Материально_ответственное_лицо"];
                this.columnid_Сотрудники = base.Columns["id_Сотрудники"];
                this.columnФИО = base.Columns["ФИО"];
                this.columnЗарплата = base.Columns["Зарплата"];
                this.columnОтгулы = base.Columns["Отгулы"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnid_Материально_ответственное_лицо = new global::System.Data.DataColumn("id_Материально_ответственное_лицо", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_Материально_ответственное_лицо);
                this.columnid_Сотрудники = new global::System.Data.DataColumn("id_Сотрудники", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_Сотрудники);
                this.columnФИО = new global::System.Data.DataColumn("ФИО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО);
                this.columnЗарплата = new global::System.Data.DataColumn("Зарплата", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗарплата);
                this.columnОтгулы = new global::System.Data.DataColumn("Отгулы", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОтгулы);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_Материально_ответственное_лицо}, true));
                this.columnid_Материально_ответственное_лицо.AllowDBNull = false;
                this.columnid_Материально_ответственное_лицо.Unique = true;
                this.columnФИО.AllowDBNull = false;
                this.columnФИО.MaxLength = 75;
                this.columnЗарплата.AllowDBNull = false;
                this.columnОтгулы.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Материально_ответственное_лицоRow NewМатериально_ответственное_лицоRow() {
                return ((Материально_ответственное_лицоRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Материально_ответственное_лицоRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Материально_ответственное_лицоRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Материально_ответственное_лицоRowChanged != null)) {
                    this.Материально_ответственное_лицоRowChanged(this, new Материально_ответственное_лицоRowChangeEvent(((Материально_ответственное_лицоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Материально_ответственное_лицоRowChanging != null)) {
                    this.Материально_ответственное_лицоRowChanging(this, new Материально_ответственное_лицоRowChangeEvent(((Материально_ответственное_лицоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Материально_ответственное_лицоRowDeleted != null)) {
                    this.Материально_ответственное_лицоRowDeleted(this, new Материально_ответственное_лицоRowChangeEvent(((Материально_ответственное_лицоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Материально_ответственное_лицоRowDeleting != null)) {
                    this.Материально_ответственное_лицоRowDeleting(this, new Материально_ответственное_лицоRowChangeEvent(((Материально_ответственное_лицоRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveМатериально_ответственное_лицоRow(Материально_ответственное_лицоRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                warehouseDataSet ds = new warehouseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Материально_ответственное_лицоDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class НакладнаяDataTable : global::System.Data.TypedTableBase<НакладнаяRow> {
            
            private global::System.Data.DataColumn columnid_Накладная;
            
            private global::System.Data.DataColumn columnСтоимость;
            
            private global::System.Data.DataColumn columnНДС_налог;
            
            private global::System.Data.DataColumn columnВид_товара;
            
            private global::System.Data.DataColumn columnКоличество_товаров;
            
            private global::System.Data.DataColumn columnГотова_к_выдаче;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public НакладнаяDataTable() {
                this.TableName = "Накладная";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal НакладнаяDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected НакладнаяDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn id_НакладнаяColumn {
                get {
                    return this.columnid_Накладная;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn СтоимостьColumn {
                get {
                    return this.columnСтоимость;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn НДС_налогColumn {
                get {
                    return this.columnНДС_налог;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Вид_товараColumn {
                get {
                    return this.columnВид_товара;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Количество_товаровColumn {
                get {
                    return this.columnКоличество_товаров;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Готова_к_выдачеColumn {
                get {
                    return this.columnГотова_к_выдаче;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public НакладнаяRow this[int index] {
                get {
                    return ((НакладнаяRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event НакладнаяRowChangeEventHandler НакладнаяRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event НакладнаяRowChangeEventHandler НакладнаяRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event НакладнаяRowChangeEventHandler НакладнаяRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event НакладнаяRowChangeEventHandler НакладнаяRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddНакладнаяRow(НакладнаяRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public НакладнаяRow AddНакладнаяRow(long id_Накладная, long Стоимость, string НДС_налог, string Вид_товара, long Количество_товаров, string Готова_к_выдаче) {
                НакладнаяRow rowНакладнаяRow = ((НакладнаяRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id_Накладная,
                        Стоимость,
                        НДС_налог,
                        Вид_товара,
                        Количество_товаров,
                        Готова_к_выдаче};
                rowНакладнаяRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowНакладнаяRow);
                return rowНакладнаяRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public НакладнаяRow FindByid_Накладная(long id_Накладная) {
                return ((НакладнаяRow)(this.Rows.Find(new object[] {
                            id_Накладная})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                НакладнаяDataTable cln = ((НакладнаяDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new НакладнаяDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnid_Накладная = base.Columns["id_Накладная"];
                this.columnСтоимость = base.Columns["Стоимость"];
                this.columnНДС_налог = base.Columns["НДС_налог"];
                this.columnВид_товара = base.Columns["Вид_товара"];
                this.columnКоличество_товаров = base.Columns["Количество_товаров"];
                this.columnГотова_к_выдаче = base.Columns["Готова_к_выдаче"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnid_Накладная = new global::System.Data.DataColumn("id_Накладная", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_Накладная);
                this.columnСтоимость = new global::System.Data.DataColumn("Стоимость", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСтоимость);
                this.columnНДС_налог = new global::System.Data.DataColumn("НДС_налог", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНДС_налог);
                this.columnВид_товара = new global::System.Data.DataColumn("Вид_товара", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВид_товара);
                this.columnКоличество_товаров = new global::System.Data.DataColumn("Количество_товаров", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество_товаров);
                this.columnГотова_к_выдаче = new global::System.Data.DataColumn("Готова_к_выдаче", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГотова_к_выдаче);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_Накладная}, true));
                this.columnid_Накладная.AllowDBNull = false;
                this.columnid_Накладная.Unique = true;
                this.columnСтоимость.AllowDBNull = false;
                this.columnНДС_налог.AllowDBNull = false;
                this.columnНДС_налог.MaxLength = 75;
                this.columnВид_товара.AllowDBNull = false;
                this.columnВид_товара.MaxLength = 75;
                this.columnКоличество_товаров.AllowDBNull = false;
                this.columnГотова_к_выдаче.AllowDBNull = false;
                this.columnГотова_к_выдаче.MaxLength = 75;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public НакладнаяRow NewНакладнаяRow() {
                return ((НакладнаяRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new НакладнаяRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(НакладнаяRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.НакладнаяRowChanged != null)) {
                    this.НакладнаяRowChanged(this, new НакладнаяRowChangeEvent(((НакладнаяRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.НакладнаяRowChanging != null)) {
                    this.НакладнаяRowChanging(this, new НакладнаяRowChangeEvent(((НакладнаяRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.НакладнаяRowDeleted != null)) {
                    this.НакладнаяRowDeleted(this, new НакладнаяRowChangeEvent(((НакладнаяRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.НакладнаяRowDeleting != null)) {
                    this.НакладнаяRowDeleting(this, new НакладнаяRowChangeEvent(((НакладнаяRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveНакладнаяRow(НакладнаяRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                warehouseDataSet ds = new warehouseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "НакладнаяDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ПоставщикDataTable : global::System.Data.TypedTableBase<ПоставщикRow> {
            
            private global::System.Data.DataColumn columnid_Поставщик;
            
            private global::System.Data.DataColumn columnКод;
            
            private global::System.Data.DataColumn columnСтрана;
            
            private global::System.Data.DataColumn columnПредприятие;
            
            private global::System.Data.DataColumn columnДата_следующей_поставки;
            
            private global::System.Data.DataColumn columnДата_прошлой_поставки;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПоставщикDataTable() {
                this.TableName = "Поставщик";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ПоставщикDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ПоставщикDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn id_ПоставщикColumn {
                get {
                    return this.columnid_Поставщик;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn КодColumn {
                get {
                    return this.columnКод;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn СтранаColumn {
                get {
                    return this.columnСтрана;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ПредприятиеColumn {
                get {
                    return this.columnПредприятие;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Дата_следующей_поставкиColumn {
                get {
                    return this.columnДата_следующей_поставки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Дата_прошлой_поставкиColumn {
                get {
                    return this.columnДата_прошлой_поставки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПоставщикRow this[int index] {
                get {
                    return ((ПоставщикRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПоставщикRowChangeEventHandler ПоставщикRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПоставщикRowChangeEventHandler ПоставщикRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПоставщикRowChangeEventHandler ПоставщикRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПоставщикRowChangeEventHandler ПоставщикRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddПоставщикRow(ПоставщикRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПоставщикRow AddПоставщикRow(long id_Поставщик, long Код, string Страна, string Предприятие, System.DateTime Дата_следующей_поставки, System.DateTime Дата_прошлой_поставки) {
                ПоставщикRow rowПоставщикRow = ((ПоставщикRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id_Поставщик,
                        Код,
                        Страна,
                        Предприятие,
                        Дата_следующей_поставки,
                        Дата_прошлой_поставки};
                rowПоставщикRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПоставщикRow);
                return rowПоставщикRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПоставщикRow FindByid_Поставщик(long id_Поставщик) {
                return ((ПоставщикRow)(this.Rows.Find(new object[] {
                            id_Поставщик})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ПоставщикDataTable cln = ((ПоставщикDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ПоставщикDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnid_Поставщик = base.Columns["id_Поставщик"];
                this.columnКод = base.Columns["Код"];
                this.columnСтрана = base.Columns["Страна"];
                this.columnПредприятие = base.Columns["Предприятие"];
                this.columnДата_следующей_поставки = base.Columns["Дата_следующей_поставки"];
                this.columnДата_прошлой_поставки = base.Columns["Дата_прошлой_поставки"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnid_Поставщик = new global::System.Data.DataColumn("id_Поставщик", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_Поставщик);
                this.columnКод = new global::System.Data.DataColumn("Код", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод);
                this.columnСтрана = new global::System.Data.DataColumn("Страна", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСтрана);
                this.columnПредприятие = new global::System.Data.DataColumn("Предприятие", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПредприятие);
                this.columnДата_следующей_поставки = new global::System.Data.DataColumn("Дата_следующей_поставки", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_следующей_поставки);
                this.columnДата_прошлой_поставки = new global::System.Data.DataColumn("Дата_прошлой_поставки", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_прошлой_поставки);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_Поставщик}, true));
                this.columnid_Поставщик.AllowDBNull = false;
                this.columnid_Поставщик.Unique = true;
                this.columnКод.AllowDBNull = false;
                this.columnСтрана.AllowDBNull = false;
                this.columnСтрана.MaxLength = 75;
                this.columnПредприятие.AllowDBNull = false;
                this.columnПредприятие.MaxLength = 75;
                this.columnДата_следующей_поставки.AllowDBNull = false;
                this.columnДата_прошлой_поставки.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПоставщикRow NewПоставщикRow() {
                return ((ПоставщикRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ПоставщикRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ПоставщикRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ПоставщикRowChanged != null)) {
                    this.ПоставщикRowChanged(this, new ПоставщикRowChangeEvent(((ПоставщикRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ПоставщикRowChanging != null)) {
                    this.ПоставщикRowChanging(this, new ПоставщикRowChangeEvent(((ПоставщикRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ПоставщикRowDeleted != null)) {
                    this.ПоставщикRowDeleted(this, new ПоставщикRowChangeEvent(((ПоставщикRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ПоставщикRowDeleting != null)) {
                    this.ПоставщикRowDeleting(this, new ПоставщикRowChangeEvent(((ПоставщикRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveПоставщикRow(ПоставщикRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                warehouseDataSet ds = new warehouseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ПоставщикDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class СотрудникиDataTable : global::System.Data.TypedTableBase<СотрудникиRow> {
            
            private global::System.Data.DataColumn columnid_Сотрудники;
            
            private global::System.Data.DataColumn columnФИО;
            
            private global::System.Data.DataColumn columnДолжность;
            
            private global::System.Data.DataColumn columnОтгулы;
            
            private global::System.Data.DataColumn columnСтаж_работы;
            
            private global::System.Data.DataColumn columnЗарплата;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СотрудникиDataTable() {
                this.TableName = "Сотрудники";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal СотрудникиDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected СотрудникиDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn id_СотрудникиColumn {
                get {
                    return this.columnid_Сотрудники;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ФИОColumn {
                get {
                    return this.columnФИО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ДолжностьColumn {
                get {
                    return this.columnДолжность;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ОтгулыColumn {
                get {
                    return this.columnОтгулы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Стаж_работыColumn {
                get {
                    return this.columnСтаж_работы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ЗарплатаColumn {
                get {
                    return this.columnЗарплата;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СотрудникиRow this[int index] {
                get {
                    return ((СотрудникиRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event СотрудникиRowChangeEventHandler СотрудникиRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event СотрудникиRowChangeEventHandler СотрудникиRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event СотрудникиRowChangeEventHandler СотрудникиRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event СотрудникиRowChangeEventHandler СотрудникиRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddСотрудникиRow(СотрудникиRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СотрудникиRow AddСотрудникиRow(long id_Сотрудники, string ФИО, string Должность, long Отгулы, string Стаж_работы, long Зарплата) {
                СотрудникиRow rowСотрудникиRow = ((СотрудникиRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id_Сотрудники,
                        ФИО,
                        Должность,
                        Отгулы,
                        Стаж_работы,
                        Зарплата};
                rowСотрудникиRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowСотрудникиRow);
                return rowСотрудникиRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СотрудникиRow FindByid_Сотрудники(long id_Сотрудники) {
                return ((СотрудникиRow)(this.Rows.Find(new object[] {
                            id_Сотрудники})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                СотрудникиDataTable cln = ((СотрудникиDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new СотрудникиDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnid_Сотрудники = base.Columns["id_Сотрудники"];
                this.columnФИО = base.Columns["ФИО"];
                this.columnДолжность = base.Columns["Должность"];
                this.columnОтгулы = base.Columns["Отгулы"];
                this.columnСтаж_работы = base.Columns["Стаж_работы"];
                this.columnЗарплата = base.Columns["Зарплата"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnid_Сотрудники = new global::System.Data.DataColumn("id_Сотрудники", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_Сотрудники);
                this.columnФИО = new global::System.Data.DataColumn("ФИО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО);
                this.columnДолжность = new global::System.Data.DataColumn("Должность", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДолжность);
                this.columnОтгулы = new global::System.Data.DataColumn("Отгулы", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОтгулы);
                this.columnСтаж_работы = new global::System.Data.DataColumn("Стаж_работы", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСтаж_работы);
                this.columnЗарплата = new global::System.Data.DataColumn("Зарплата", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗарплата);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_Сотрудники}, true));
                this.columnid_Сотрудники.AllowDBNull = false;
                this.columnid_Сотрудники.Unique = true;
                this.columnФИО.AllowDBNull = false;
                this.columnФИО.MaxLength = 75;
                this.columnДолжность.AllowDBNull = false;
                this.columnДолжность.MaxLength = 50;
                this.columnОтгулы.AllowDBNull = false;
                this.columnСтаж_работы.AllowDBNull = false;
                this.columnСтаж_работы.MaxLength = 50;
                this.columnЗарплата.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СотрудникиRow NewСотрудникиRow() {
                return ((СотрудникиRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new СотрудникиRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(СотрудникиRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.СотрудникиRowChanged != null)) {
                    this.СотрудникиRowChanged(this, new СотрудникиRowChangeEvent(((СотрудникиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.СотрудникиRowChanging != null)) {
                    this.СотрудникиRowChanging(this, new СотрудникиRowChangeEvent(((СотрудникиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.СотрудникиRowDeleted != null)) {
                    this.СотрудникиRowDeleted(this, new СотрудникиRowChangeEvent(((СотрудникиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.СотрудникиRowDeleting != null)) {
                    this.СотрудникиRowDeleting(this, new СотрудникиRowChangeEvent(((СотрудникиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveСотрудникиRow(СотрудникиRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                warehouseDataSet ds = new warehouseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "СотрудникиDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ТорварDataTable : global::System.Data.TypedTableBase<ТорварRow> {
            
            private global::System.Data.DataColumn columnid_Товар;
            
            private global::System.Data.DataColumn columnid_Категория;
            
            private global::System.Data.DataColumn columnНомер;
            
            private global::System.Data.DataColumn columnСтрана;
            
            private global::System.Data.DataColumn columnНазвание;
            
            private global::System.Data.DataColumn columnПроизводитель;
            
            private global::System.Data.DataColumn columnКоличество_товаров_на_складе;
            
            private global::System.Data.DataColumn columnСерия;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ТорварDataTable() {
                this.TableName = "Торвар";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ТорварDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ТорварDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn id_ТоварColumn {
                get {
                    return this.columnid_Товар;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn id_КатегорияColumn {
                get {
                    return this.columnid_Категория;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn НомерColumn {
                get {
                    return this.columnНомер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn СтранаColumn {
                get {
                    return this.columnСтрана;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn НазваниеColumn {
                get {
                    return this.columnНазвание;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ПроизводительColumn {
                get {
                    return this.columnПроизводитель;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Количество_товаров_на_складеColumn {
                get {
                    return this.columnКоличество_товаров_на_складе;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn СерияColumn {
                get {
                    return this.columnСерия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ТорварRow this[int index] {
                get {
                    return ((ТорварRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ТорварRowChangeEventHandler ТорварRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ТорварRowChangeEventHandler ТорварRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ТорварRowChangeEventHandler ТорварRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ТорварRowChangeEventHandler ТорварRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddТорварRow(ТорварRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ТорварRow AddТорварRow(long id_Товар, long id_Категория, long Номер, string Страна, string Название, string Производитель, long Количество_товаров_на_складе, long Серия) {
                ТорварRow rowТорварRow = ((ТорварRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id_Товар,
                        id_Категория,
                        Номер,
                        Страна,
                        Название,
                        Производитель,
                        Количество_товаров_на_складе,
                        Серия};
                rowТорварRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowТорварRow);
                return rowТорварRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ТорварRow FindByid_Товар(long id_Товар) {
                return ((ТорварRow)(this.Rows.Find(new object[] {
                            id_Товар})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ТорварDataTable cln = ((ТорварDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ТорварDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnid_Товар = base.Columns["id_Товар"];
                this.columnid_Категория = base.Columns["id_Категория"];
                this.columnНомер = base.Columns["Номер"];
                this.columnСтрана = base.Columns["Страна"];
                this.columnНазвание = base.Columns["Название"];
                this.columnПроизводитель = base.Columns["Производитель"];
                this.columnКоличество_товаров_на_складе = base.Columns["Количество_товаров_на_складе"];
                this.columnСерия = base.Columns["Серия"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnid_Товар = new global::System.Data.DataColumn("id_Товар", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_Товар);
                this.columnid_Категория = new global::System.Data.DataColumn("id_Категория", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_Категория);
                this.columnНомер = new global::System.Data.DataColumn("Номер", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер);
                this.columnСтрана = new global::System.Data.DataColumn("Страна", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСтрана);
                this.columnНазвание = new global::System.Data.DataColumn("Название", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНазвание);
                this.columnПроизводитель = new global::System.Data.DataColumn("Производитель", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПроизводитель);
                this.columnКоличество_товаров_на_складе = new global::System.Data.DataColumn("Количество_товаров_на_складе", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество_товаров_на_складе);
                this.columnСерия = new global::System.Data.DataColumn("Серия", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСерия);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_Товар}, true));
                this.columnid_Товар.AllowDBNull = false;
                this.columnid_Товар.Unique = true;
                this.columnНомер.AllowDBNull = false;
                this.columnСтрана.AllowDBNull = false;
                this.columnСтрана.MaxLength = 75;
                this.columnНазвание.AllowDBNull = false;
                this.columnНазвание.MaxLength = 75;
                this.columnПроизводитель.AllowDBNull = false;
                this.columnПроизводитель.MaxLength = 75;
                this.columnКоличество_товаров_на_складе.AllowDBNull = false;
                this.columnСерия.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ТорварRow NewТорварRow() {
                return ((ТорварRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ТорварRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ТорварRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ТорварRowChanged != null)) {
                    this.ТорварRowChanged(this, new ТорварRowChangeEvent(((ТорварRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ТорварRowChanging != null)) {
                    this.ТорварRowChanging(this, new ТорварRowChangeEvent(((ТорварRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ТорварRowDeleted != null)) {
                    this.ТорварRowDeleted(this, new ТорварRowChangeEvent(((ТорварRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ТорварRowDeleting != null)) {
                    this.ТорварRowDeleting(this, new ТорварRowChangeEvent(((ТорварRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveТорварRow(ТорварRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                warehouseDataSet ds = new warehouseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ТорварDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ЗаказчикRow : global::System.Data.DataRow {
            
            private ЗаказчикDataTable tableЗаказчик;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ЗаказчикRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableЗаказчик = ((ЗаказчикDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id_Заказчик {
                get {
                    return ((long)(this[this.tableЗаказчик.id_ЗаказчикColumn]));
                }
                set {
                    this[this.tableЗаказчик.id_ЗаказчикColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ФИО {
                get {
                    return ((string)(this[this.tableЗаказчик.ФИОColumn]));
                }
                set {
                    this[this.tableЗаказчик.ФИОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Название_товара {
                get {
                    return ((string)(this[this.tableЗаказчик.Название_товараColumn]));
                }
                set {
                    this[this.tableЗаказчик.Название_товараColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Номер_товара {
                get {
                    return ((long)(this[this.tableЗаказчик.Номер_товараColumn]));
                }
                set {
                    this[this.tableЗаказчик.Номер_товараColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Паспортные_данные {
                get {
                    return ((long)(this[this.tableЗаказчик.Паспортные_данныеColumn]));
                }
                set {
                    this[this.tableЗаказчик.Паспортные_данныеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Возраст {
                get {
                    return ((long)(this[this.tableЗаказчик.ВозрастColumn]));
                }
                set {
                    this[this.tableЗаказчик.ВозрастColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Город {
                get {
                    return ((string)(this[this.tableЗаказчик.ГородColumn]));
                }
                set {
                    this[this.tableЗаказчик.ГородColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Страна {
                get {
                    return ((string)(this[this.tableЗаказчик.СтранаColumn]));
                }
                set {
                    this[this.tableЗаказчик.СтранаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Регион {
                get {
                    return ((string)(this[this.tableЗаказчик.РегионColumn]));
                }
                set {
                    this[this.tableЗаказчик.РегионColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Адрес {
                get {
                    return ((string)(this[this.tableЗаказчик.АдресColumn]));
                }
                set {
                    this[this.tableЗаказчик.АдресColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Номер_телефона {
                get {
                    return ((long)(this[this.tableЗаказчик.Номер_телефонаColumn]));
                }
                set {
                    this[this.tableЗаказчик.Номер_телефонаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Дата_когда_был_сделан_заказ {
                get {
                    return ((global::System.DateTime)(this[this.tableЗаказчик.Дата_когда_был_сделан_заказColumn]));
                }
                set {
                    this[this.tableЗаказчик.Дата_когда_был_сделан_заказColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Дата_отправки {
                get {
                    return ((global::System.DateTime)(this[this.tableЗаказчик.Дата_отправкиColumn]));
                }
                set {
                    this[this.tableЗаказчик.Дата_отправкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Оформлена_накладная {
                get {
                    return ((string)(this[this.tableЗаказчик.Оформлена_накладнаяColumn]));
                }
                set {
                    this[this.tableЗаказчик.Оформлена_накладнаяColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class КатегорияRow : global::System.Data.DataRow {
            
            private КатегорияDataTable tableКатегория;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal КатегорияRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableКатегория = ((КатегорияDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id_Категория {
                get {
                    return ((long)(this[this.tableКатегория.id_КатегорияColumn]));
                }
                set {
                    this[this.tableКатегория.id_КатегорияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Инструменты {
                get {
                    return ((long)(this[this.tableКатегория.ИнструментыColumn]));
                }
                set {
                    this[this.tableКатегория.ИнструментыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Приборы {
                get {
                    return ((long)(this[this.tableКатегория.ПриборыColumn]));
                }
                set {
                    this[this.tableКатегория.ПриборыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Аппараты {
                get {
                    return ((long)(this[this.tableКатегория.АппаратыColumn]));
                }
                set {
                    this[this.tableКатегория.АппаратыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Оборудование {
                get {
                    return ((long)(this[this.tableКатегория.ОборудованиеColumn]));
                }
                set {
                    this[this.tableКатегория.ОборудованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Расходные_материалы {
                get {
                    return ((long)(this[this.tableКатегория.Расходные_материалыColumn]));
                }
                set {
                    this[this.tableКатегория.Расходные_материалыColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class КладовщикRow : global::System.Data.DataRow {
            
            private КладовщикDataTable tableКладовщик;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal КладовщикRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableКладовщик = ((КладовщикDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id_Кладовщик {
                get {
                    return ((long)(this[this.tableКладовщик.id_КладовщикColumn]));
                }
                set {
                    this[this.tableКладовщик.id_КладовщикColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id_Сотрудники {
                get {
                    try {
                        return ((long)(this[this.tableКладовщик.id_СотрудникиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'id_Сотрудники\' в таблице \'Кладовщик\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableКладовщик.id_СотрудникиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ФИО {
                get {
                    return ((string)(this[this.tableКладовщик.ФИОColumn]));
                }
                set {
                    this[this.tableКладовщик.ФИОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Зарплата {
                get {
                    return ((long)(this[this.tableКладовщик.ЗарплатаColumn]));
                }
                set {
                    this[this.tableКладовщик.ЗарплатаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Отгулы {
                get {
                    return ((long)(this[this.tableКладовщик.ОтгулыColumn]));
                }
                set {
                    this[this.tableКладовщик.ОтгулыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isid_СотрудникиNull() {
                return this.IsNull(this.tableКладовщик.id_СотрудникиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setid_СотрудникиNull() {
                this[this.tableКладовщик.id_СотрудникиColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Материально_ответственное_лицоRow : global::System.Data.DataRow {
            
            private Материально_ответственное_лицоDataTable tableМатериально_ответственное_лицо;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Материально_ответственное_лицоRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableМатериально_ответственное_лицо = ((Материально_ответственное_лицоDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id_Материально_ответственное_лицо {
                get {
                    return ((long)(this[this.tableМатериально_ответственное_лицо.id_Материально_ответственное_лицоColumn]));
                }
                set {
                    this[this.tableМатериально_ответственное_лицо.id_Материально_ответственное_лицоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id_Сотрудники {
                get {
                    try {
                        return ((long)(this[this.tableМатериально_ответственное_лицо.id_СотрудникиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'id_Сотрудники\' в таблице \'Материально_ответственное_лицо\' р" +
                                "авно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМатериально_ответственное_лицо.id_СотрудникиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ФИО {
                get {
                    return ((string)(this[this.tableМатериально_ответственное_лицо.ФИОColumn]));
                }
                set {
                    this[this.tableМатериально_ответственное_лицо.ФИОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Зарплата {
                get {
                    return ((long)(this[this.tableМатериально_ответственное_лицо.ЗарплатаColumn]));
                }
                set {
                    this[this.tableМатериально_ответственное_лицо.ЗарплатаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Отгулы {
                get {
                    return ((long)(this[this.tableМатериально_ответственное_лицо.ОтгулыColumn]));
                }
                set {
                    this[this.tableМатериально_ответственное_лицо.ОтгулыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isid_СотрудникиNull() {
                return this.IsNull(this.tableМатериально_ответственное_лицо.id_СотрудникиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setid_СотрудникиNull() {
                this[this.tableМатериально_ответственное_лицо.id_СотрудникиColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class НакладнаяRow : global::System.Data.DataRow {
            
            private НакладнаяDataTable tableНакладная;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal НакладнаяRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableНакладная = ((НакладнаяDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id_Накладная {
                get {
                    return ((long)(this[this.tableНакладная.id_НакладнаяColumn]));
                }
                set {
                    this[this.tableНакладная.id_НакладнаяColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Стоимость {
                get {
                    return ((long)(this[this.tableНакладная.СтоимостьColumn]));
                }
                set {
                    this[this.tableНакладная.СтоимостьColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string НДС_налог {
                get {
                    return ((string)(this[this.tableНакладная.НДС_налогColumn]));
                }
                set {
                    this[this.tableНакладная.НДС_налогColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Вид_товара {
                get {
                    return ((string)(this[this.tableНакладная.Вид_товараColumn]));
                }
                set {
                    this[this.tableНакладная.Вид_товараColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Количество_товаров {
                get {
                    return ((long)(this[this.tableНакладная.Количество_товаровColumn]));
                }
                set {
                    this[this.tableНакладная.Количество_товаровColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Готова_к_выдаче {
                get {
                    return ((string)(this[this.tableНакладная.Готова_к_выдачеColumn]));
                }
                set {
                    this[this.tableНакладная.Готова_к_выдачеColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ПоставщикRow : global::System.Data.DataRow {
            
            private ПоставщикDataTable tableПоставщик;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ПоставщикRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПоставщик = ((ПоставщикDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id_Поставщик {
                get {
                    return ((long)(this[this.tableПоставщик.id_ПоставщикColumn]));
                }
                set {
                    this[this.tableПоставщик.id_ПоставщикColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Код {
                get {
                    return ((long)(this[this.tableПоставщик.КодColumn]));
                }
                set {
                    this[this.tableПоставщик.КодColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Страна {
                get {
                    return ((string)(this[this.tableПоставщик.СтранаColumn]));
                }
                set {
                    this[this.tableПоставщик.СтранаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Предприятие {
                get {
                    return ((string)(this[this.tableПоставщик.ПредприятиеColumn]));
                }
                set {
                    this[this.tableПоставщик.ПредприятиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Дата_следующей_поставки {
                get {
                    return ((global::System.DateTime)(this[this.tableПоставщик.Дата_следующей_поставкиColumn]));
                }
                set {
                    this[this.tableПоставщик.Дата_следующей_поставкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Дата_прошлой_поставки {
                get {
                    return ((global::System.DateTime)(this[this.tableПоставщик.Дата_прошлой_поставкиColumn]));
                }
                set {
                    this[this.tableПоставщик.Дата_прошлой_поставкиColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class СотрудникиRow : global::System.Data.DataRow {
            
            private СотрудникиDataTable tableСотрудники;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal СотрудникиRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableСотрудники = ((СотрудникиDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id_Сотрудники {
                get {
                    return ((long)(this[this.tableСотрудники.id_СотрудникиColumn]));
                }
                set {
                    this[this.tableСотрудники.id_СотрудникиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ФИО {
                get {
                    return ((string)(this[this.tableСотрудники.ФИОColumn]));
                }
                set {
                    this[this.tableСотрудники.ФИОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Должность {
                get {
                    return ((string)(this[this.tableСотрудники.ДолжностьColumn]));
                }
                set {
                    this[this.tableСотрудники.ДолжностьColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Отгулы {
                get {
                    return ((long)(this[this.tableСотрудники.ОтгулыColumn]));
                }
                set {
                    this[this.tableСотрудники.ОтгулыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Стаж_работы {
                get {
                    return ((string)(this[this.tableСотрудники.Стаж_работыColumn]));
                }
                set {
                    this[this.tableСотрудники.Стаж_работыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Зарплата {
                get {
                    return ((long)(this[this.tableСотрудники.ЗарплатаColumn]));
                }
                set {
                    this[this.tableСотрудники.ЗарплатаColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ТорварRow : global::System.Data.DataRow {
            
            private ТорварDataTable tableТорвар;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ТорварRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableТорвар = ((ТорварDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id_Товар {
                get {
                    return ((long)(this[this.tableТорвар.id_ТоварColumn]));
                }
                set {
                    this[this.tableТорвар.id_ТоварColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id_Категория {
                get {
                    try {
                        return ((long)(this[this.tableТорвар.id_КатегорияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'id_Категория\' в таблице \'Торвар\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableТорвар.id_КатегорияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Номер {
                get {
                    return ((long)(this[this.tableТорвар.НомерColumn]));
                }
                set {
                    this[this.tableТорвар.НомерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Страна {
                get {
                    return ((string)(this[this.tableТорвар.СтранаColumn]));
                }
                set {
                    this[this.tableТорвар.СтранаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Название {
                get {
                    return ((string)(this[this.tableТорвар.НазваниеColumn]));
                }
                set {
                    this[this.tableТорвар.НазваниеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Производитель {
                get {
                    return ((string)(this[this.tableТорвар.ПроизводительColumn]));
                }
                set {
                    this[this.tableТорвар.ПроизводительColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Количество_товаров_на_складе {
                get {
                    return ((long)(this[this.tableТорвар.Количество_товаров_на_складеColumn]));
                }
                set {
                    this[this.tableТорвар.Количество_товаров_на_складеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Серия {
                get {
                    return ((long)(this[this.tableТорвар.СерияColumn]));
                }
                set {
                    this[this.tableТорвар.СерияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isid_КатегорияNull() {
                return this.IsNull(this.tableТорвар.id_КатегорияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setid_КатегорияNull() {
                this[this.tableТорвар.id_КатегорияColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ЗаказчикRowChangeEvent : global::System.EventArgs {
            
            private ЗаказчикRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ЗаказчикRowChangeEvent(ЗаказчикRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ЗаказчикRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class КатегорияRowChangeEvent : global::System.EventArgs {
            
            private КатегорияRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КатегорияRowChangeEvent(КатегорияRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КатегорияRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class КладовщикRowChangeEvent : global::System.EventArgs {
            
            private КладовщикRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КладовщикRowChangeEvent(КладовщикRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КладовщикRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class Материально_ответственное_лицоRowChangeEvent : global::System.EventArgs {
            
            private Материально_ответственное_лицоRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Материально_ответственное_лицоRowChangeEvent(Материально_ответственное_лицоRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Материально_ответственное_лицоRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class НакладнаяRowChangeEvent : global::System.EventArgs {
            
            private НакладнаяRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public НакладнаяRowChangeEvent(НакладнаяRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public НакладнаяRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ПоставщикRowChangeEvent : global::System.EventArgs {
            
            private ПоставщикRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПоставщикRowChangeEvent(ПоставщикRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПоставщикRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class СотрудникиRowChangeEvent : global::System.EventArgs {
            
            private СотрудникиRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СотрудникиRowChangeEvent(СотрудникиRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public СотрудникиRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ТорварRowChangeEvent : global::System.EventArgs {
            
            private ТорварRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ТорварRowChangeEvent(ТорварRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ТорварRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace СП1.warehouseDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ЗаказчикTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ЗаказчикTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Заказчик";
            tableMapping.ColumnMappings.Add("id_Заказчик", "id_Заказчик");
            tableMapping.ColumnMappings.Add("ФИО", "ФИО");
            tableMapping.ColumnMappings.Add("Название_товара", "Название_товара");
            tableMapping.ColumnMappings.Add("Номер_товара", "Номер_товара");
            tableMapping.ColumnMappings.Add("Паспортные_данные", "Паспортные_данные");
            tableMapping.ColumnMappings.Add("Возраст", "Возраст");
            tableMapping.ColumnMappings.Add("Город", "Город");
            tableMapping.ColumnMappings.Add("Страна", "Страна");
            tableMapping.ColumnMappings.Add("Регион", "Регион");
            tableMapping.ColumnMappings.Add("Адрес", "Адрес");
            tableMapping.ColumnMappings.Add("Номер_телефона", "Номер_телефона");
            tableMapping.ColumnMappings.Add("Дата_когда_был_сделан_заказ", "Дата_когда_был_сделан_заказ");
            tableMapping.ColumnMappings.Add("Дата_отправки", "Дата_отправки");
            tableMapping.ColumnMappings.Add("Оформлена_накладная", "Оформлена_накладная");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""warehouse"".""public"".""Заказчик"" WHERE ((""id_Заказчик"" = @Original_id_Заказчик) AND (""ФИО"" = @Original_ФИО) AND (""Название_товара"" = @Original_Название_товара) AND (""Номер_товара"" = @Original_Номер_товара) AND (""Паспортные_данные"" = @Original_Паспортные_данные) AND (""Возраст"" = @Original_Возраст) AND (""Город"" = @Original_Город) AND (""Страна"" = @Original_Страна) AND (""Регион"" = @Original_Регион) AND (""Адрес"" = @Original_Адрес) AND (""Номер_телефона"" = @Original_Номер_телефона) AND (""Дата_когда_был_сделан_заказ"" = @Original_Дата_когда_был_сделан_заказ) AND (""Дата_отправки"" = @Original_Дата_отправки) AND (""Оформлена_накладная"" = @Original_Оформлена_накладная))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Заказчик";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Заказчик";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_ФИО";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Название_товара";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Название_товара";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Номер_товара";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Номер_товара";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Паспортные_данные";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Паспортные_данные";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Возраст";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Возраст";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Город";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Город";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Страна";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Страна";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Регион";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Регион";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Адрес";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Адрес";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Номер_телефона";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Номер_телефона";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Дата_когда_был_сделан_заказ";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Дата_когда_был_сделан_заказ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Дата_отправки";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Дата_отправки";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Оформлена_накладная";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Оформлена_накладная";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""warehouse"".""public"".""Заказчик"" (""id_Заказчик"", ""ФИО"", ""Название_товара"", ""Номер_товара"", ""Паспортные_данные"", ""Возраст"", ""Город"", ""Страна"", ""Регион"", ""Адрес"", ""Номер_телефона"", ""Дата_когда_был_сделан_заказ"", ""Дата_отправки"", ""Оформлена_накладная"") VALUES (@id_Заказчик, @ФИО, @Название_товара, @Номер_товара, @Паспортные_данные, @Возраст, @Город, @Страна, @Регион, @Адрес, @Номер_телефона, @Дата_когда_был_сделан_заказ, @Дата_отправки, @Оформлена_накладная)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Заказчик";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Заказчик";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@ФИО";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Название_товара";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Название_товара";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Номер_товара";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Номер_товара";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Паспортные_данные";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Паспортные_данные";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Возраст";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Возраст";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Город";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Город";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Страна";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Страна";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Регион";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Регион";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Адрес";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Адрес";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Номер_телефона";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Номер_телефона";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Дата_когда_был_сделан_заказ";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Дата_когда_был_сделан_заказ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Дата_отправки";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Дата_отправки";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Оформлена_накладная";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Оформлена_накладная";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""warehouse"".""public"".""Заказчик"" SET ""id_Заказчик"" = @id_Заказчик, ""ФИО"" = @ФИО, ""Название_товара"" = @Название_товара, ""Номер_товара"" = @Номер_товара, ""Паспортные_данные"" = @Паспортные_данные, ""Возраст"" = @Возраст, ""Город"" = @Город, ""Страна"" = @Страна, ""Регион"" = @Регион, ""Адрес"" = @Адрес, ""Номер_телефона"" = @Номер_телефона, ""Дата_когда_был_сделан_заказ"" = @Дата_когда_был_сделан_заказ, ""Дата_отправки"" = @Дата_отправки, ""Оформлена_накладная"" = @Оформлена_накладная WHERE ((""id_Заказчик"" = @Original_id_Заказчик) AND (""ФИО"" = @Original_ФИО) AND (""Название_товара"" = @Original_Название_товара) AND (""Номер_товара"" = @Original_Номер_товара) AND (""Паспортные_данные"" = @Original_Паспортные_данные) AND (""Возраст"" = @Original_Возраст) AND (""Город"" = @Original_Город) AND (""Страна"" = @Original_Страна) AND (""Регион"" = @Original_Регион) AND (""Адрес"" = @Original_Адрес) AND (""Номер_телефона"" = @Original_Номер_телефона) AND (""Дата_когда_был_сделан_заказ"" = @Original_Дата_когда_был_сделан_заказ) AND (""Дата_отправки"" = @Original_Дата_отправки) AND (""Оформлена_накладная"" = @Original_Оформлена_накладная))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Заказчик";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Заказчик";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@ФИО";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Название_товара";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Название_товара";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Номер_товара";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Номер_товара";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Паспортные_данные";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Паспортные_данные";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Возраст";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Возраст";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Город";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Город";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Страна";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Страна";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Регион";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Регион";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Адрес";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Адрес";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Номер_телефона";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Номер_телефона";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Дата_когда_был_сделан_заказ";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Дата_когда_был_сделан_заказ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Дата_отправки";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Дата_отправки";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Оформлена_накладная";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Оформлена_накладная";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Заказчик";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Заказчик";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_ФИО";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Название_товара";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Название_товара";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Номер_товара";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Номер_товара";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Паспортные_данные";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Паспортные_данные";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Возраст";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Возраст";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Город";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Город";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Страна";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Страна";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Регион";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Регион";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Адрес";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Адрес";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Номер_телефона";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Номер_телефона";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Дата_когда_был_сделан_заказ";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Дата_когда_был_сделан_заказ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Дата_отправки";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Дата_отправки";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Оформлена_накладная";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Оформлена_накладная";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::СП1.Properties.Settings.Default.warehouseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"id_Заказчик\", \"ФИО\", \"Название_товара\", \"Номер_товара\", \"Паспортные_данны" +
                "е\", \"Возраст\", \"Город\", \"Страна\", \"Регион\", \"Адрес\", \"Номер_телефона\", \"Дата_ког" +
                "да_был_сделан_заказ\", \"Дата_отправки\", \"Оформлена_накладная\" FROM \"public\".\"Зака" +
                "зчик\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(warehouseDataSet.ЗаказчикDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual warehouseDataSet.ЗаказчикDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            warehouseDataSet.ЗаказчикDataTable dataTable = new warehouseDataSet.ЗаказчикDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(warehouseDataSet.ЗаказчикDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(warehouseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Заказчик");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long @Original_id_Заказчик, string @Original_ФИО, string @Original_Название_товара, long @Original_Номер_товара, long @Original_Паспортные_данные, long @Original_Возраст, string @Original_Город, string @Original_Страна, string @Original_Регион, string @Original_Адрес, long @Original_Номер_телефона, System.DateTime @Original_Дата_когда_был_сделан_заказ, System.DateTime @Original_Дата_отправки, string @Original_Оформлена_накладная) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(@Original_id_Заказчик));
            if ((@Original_ФИО == null)) {
                throw new global::System.ArgumentNullException("@Original_ФИО");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(@Original_ФИО));
            }
            if ((@Original_Название_товара == null)) {
                throw new global::System.ArgumentNullException("@Original_Название_товара");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(@Original_Название_товара));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((long)(@Original_Номер_товара));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((long)(@Original_Паспортные_данные));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(@Original_Возраст));
            if ((@Original_Город == null)) {
                throw new global::System.ArgumentNullException("@Original_Город");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(@Original_Город));
            }
            if ((@Original_Страна == null)) {
                throw new global::System.ArgumentNullException("@Original_Страна");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(@Original_Страна));
            }
            if ((@Original_Регион == null)) {
                throw new global::System.ArgumentNullException("@Original_Регион");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(@Original_Регион));
            }
            if ((@Original_Адрес == null)) {
                throw new global::System.ArgumentNullException("@Original_Адрес");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(@Original_Адрес));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((long)(@Original_Номер_телефона));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(@Original_Дата_когда_был_сделан_заказ));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(@Original_Дата_отправки));
            if ((@Original_Оформлена_накладная == null)) {
                throw new global::System.ArgumentNullException("@Original_Оформлена_накладная");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(@Original_Оформлена_накладная));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long @id_Заказчик, string @ФИО, string @Название_товара, long @Номер_товара, long @Паспортные_данные, long @Возраст, string @Город, string @Страна, string @Регион, string @Адрес, long @Номер_телефона, System.DateTime @Дата_когда_был_сделан_заказ, System.DateTime @Дата_отправки, string @Оформлена_накладная) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(@id_Заказчик));
            if ((@ФИО == null)) {
                throw new global::System.ArgumentNullException("@ФИО");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(@ФИО));
            }
            if ((@Название_товара == null)) {
                throw new global::System.ArgumentNullException("@Название_товара");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@Название_товара));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(@Номер_товара));
            this.Adapter.InsertCommand.Parameters[4].Value = ((long)(@Паспортные_данные));
            this.Adapter.InsertCommand.Parameters[5].Value = ((long)(@Возраст));
            if ((@Город == null)) {
                throw new global::System.ArgumentNullException("@Город");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(@Город));
            }
            if ((@Страна == null)) {
                throw new global::System.ArgumentNullException("@Страна");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(@Страна));
            }
            if ((@Регион == null)) {
                throw new global::System.ArgumentNullException("@Регион");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(@Регион));
            }
            if ((@Адрес == null)) {
                throw new global::System.ArgumentNullException("@Адрес");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(@Адрес));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((long)(@Номер_телефона));
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(@Дата_когда_был_сделан_заказ));
            this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(@Дата_отправки));
            if ((@Оформлена_накладная == null)) {
                throw new global::System.ArgumentNullException("@Оформлена_накладная");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(@Оформлена_накладная));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long @id_Заказчик, 
                    string @ФИО, 
                    string @Название_товара, 
                    long @Номер_товара, 
                    long @Паспортные_данные, 
                    long @Возраст, 
                    string @Город, 
                    string @Страна, 
                    string @Регион, 
                    string @Адрес, 
                    long @Номер_телефона, 
                    System.DateTime @Дата_когда_был_сделан_заказ, 
                    System.DateTime @Дата_отправки, 
                    string @Оформлена_накладная, 
                    long @Original_id_Заказчик, 
                    string @Original_ФИО, 
                    string @Original_Название_товара, 
                    long @Original_Номер_товара, 
                    long @Original_Паспортные_данные, 
                    long @Original_Возраст, 
                    string @Original_Город, 
                    string @Original_Страна, 
                    string @Original_Регион, 
                    string @Original_Адрес, 
                    long @Original_Номер_телефона, 
                    System.DateTime @Original_Дата_когда_был_сделан_заказ, 
                    System.DateTime @Original_Дата_отправки, 
                    string @Original_Оформлена_накладная) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(@id_Заказчик));
            if ((@ФИО == null)) {
                throw new global::System.ArgumentNullException("@ФИО");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(@ФИО));
            }
            if ((@Название_товара == null)) {
                throw new global::System.ArgumentNullException("@Название_товара");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@Название_товара));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(@Номер_товара));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(@Паспортные_данные));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(@Возраст));
            if ((@Город == null)) {
                throw new global::System.ArgumentNullException("@Город");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(@Город));
            }
            if ((@Страна == null)) {
                throw new global::System.ArgumentNullException("@Страна");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(@Страна));
            }
            if ((@Регион == null)) {
                throw new global::System.ArgumentNullException("@Регион");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(@Регион));
            }
            if ((@Адрес == null)) {
                throw new global::System.ArgumentNullException("@Адрес");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(@Адрес));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(@Номер_телефона));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(@Дата_когда_был_сделан_заказ));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(@Дата_отправки));
            if ((@Оформлена_накладная == null)) {
                throw new global::System.ArgumentNullException("@Оформлена_накладная");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(@Оформлена_накладная));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((long)(@Original_id_Заказчик));
            if ((@Original_ФИО == null)) {
                throw new global::System.ArgumentNullException("@Original_ФИО");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(@Original_ФИО));
            }
            if ((@Original_Название_товара == null)) {
                throw new global::System.ArgumentNullException("@Original_Название_товара");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(@Original_Название_товара));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((long)(@Original_Номер_товара));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((long)(@Original_Паспортные_данные));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((long)(@Original_Возраст));
            if ((@Original_Город == null)) {
                throw new global::System.ArgumentNullException("@Original_Город");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(@Original_Город));
            }
            if ((@Original_Страна == null)) {
                throw new global::System.ArgumentNullException("@Original_Страна");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(@Original_Страна));
            }
            if ((@Original_Регион == null)) {
                throw new global::System.ArgumentNullException("@Original_Регион");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(@Original_Регион));
            }
            if ((@Original_Адрес == null)) {
                throw new global::System.ArgumentNullException("@Original_Адрес");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(@Original_Адрес));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((long)(@Original_Номер_телефона));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(@Original_Дата_когда_был_сделан_заказ));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(@Original_Дата_отправки));
            if ((@Original_Оформлена_накладная == null)) {
                throw new global::System.ArgumentNullException("@Original_Оформлена_накладная");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(@Original_Оформлена_накладная));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string @ФИО, 
                    string @Название_товара, 
                    long @Номер_товара, 
                    long @Паспортные_данные, 
                    long @Возраст, 
                    string @Город, 
                    string @Страна, 
                    string @Регион, 
                    string @Адрес, 
                    long @Номер_телефона, 
                    System.DateTime @Дата_когда_был_сделан_заказ, 
                    System.DateTime @Дата_отправки, 
                    string @Оформлена_накладная, 
                    long @Original_id_Заказчик, 
                    string @Original_ФИО, 
                    string @Original_Название_товара, 
                    long @Original_Номер_товара, 
                    long @Original_Паспортные_данные, 
                    long @Original_Возраст, 
                    string @Original_Город, 
                    string @Original_Страна, 
                    string @Original_Регион, 
                    string @Original_Адрес, 
                    long @Original_Номер_телефона, 
                    System.DateTime @Original_Дата_когда_был_сделан_заказ, 
                    System.DateTime @Original_Дата_отправки, 
                    string @Original_Оформлена_накладная) {
            return this.Update(@Original_id_Заказчик, @ФИО, @Название_товара, @Номер_товара, @Паспортные_данные, @Возраст, @Город, @Страна, @Регион, @Адрес, @Номер_телефона, @Дата_когда_был_сделан_заказ, @Дата_отправки, @Оформлена_накладная, @Original_id_Заказчик, @Original_ФИО, @Original_Название_товара, @Original_Номер_товара, @Original_Паспортные_данные, @Original_Возраст, @Original_Город, @Original_Страна, @Original_Регион, @Original_Адрес, @Original_Номер_телефона, @Original_Дата_когда_был_сделан_заказ, @Original_Дата_отправки, @Original_Оформлена_накладная);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class КатегорияTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public КатегорияTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Категория";
            tableMapping.ColumnMappings.Add("id_Категория", "id_Категория");
            tableMapping.ColumnMappings.Add("Инструменты", "Инструменты");
            tableMapping.ColumnMappings.Add("Приборы", "Приборы");
            tableMapping.ColumnMappings.Add("Аппараты", "Аппараты");
            tableMapping.ColumnMappings.Add("Оборудование", "Оборудование");
            tableMapping.ColumnMappings.Add("Расходные_материалы", "Расходные_материалы");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""warehouse"".""public"".""Категория"" WHERE ((""id_Категория"" = @Original_id_Категория) AND (""Инструменты"" = @Original_Инструменты) AND (""Приборы"" = @Original_Приборы) AND (""Аппараты"" = @Original_Аппараты) AND (""Оборудование"" = @Original_Оборудование) AND (""Расходные_материалы"" = @Original_Расходные_материалы))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Категория";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Категория";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Инструменты";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Инструменты";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Приборы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Приборы";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Аппараты";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Аппараты";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Оборудование";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Оборудование";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Расходные_материалы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Расходные_материалы";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"warehouse\".\"public\".\"Категория\" (\"id_Категория\", \"Инструменты\", \"При" +
                "боры\", \"Аппараты\", \"Оборудование\", \"Расходные_материалы\") VALUES (@id_Категория," +
                " @Инструменты, @Приборы, @Аппараты, @Оборудование, @Расходные_материалы)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Категория";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Категория";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Инструменты";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Инструменты";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Приборы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Приборы";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Аппараты";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Аппараты";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Оборудование";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Оборудование";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Расходные_материалы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Расходные_материалы";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""warehouse"".""public"".""Категория"" SET ""id_Категория"" = @id_Категория, ""Инструменты"" = @Инструменты, ""Приборы"" = @Приборы, ""Аппараты"" = @Аппараты, ""Оборудование"" = @Оборудование, ""Расходные_материалы"" = @Расходные_материалы WHERE ((""id_Категория"" = @Original_id_Категория) AND (""Инструменты"" = @Original_Инструменты) AND (""Приборы"" = @Original_Приборы) AND (""Аппараты"" = @Original_Аппараты) AND (""Оборудование"" = @Original_Оборудование) AND (""Расходные_материалы"" = @Original_Расходные_материалы))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Категория";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Категория";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Инструменты";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Инструменты";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Приборы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Приборы";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Аппараты";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Аппараты";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Оборудование";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Оборудование";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Расходные_материалы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Расходные_материалы";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Категория";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Категория";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Инструменты";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Инструменты";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Приборы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Приборы";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Аппараты";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Аппараты";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Оборудование";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Оборудование";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Расходные_материалы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Расходные_материалы";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::СП1.Properties.Settings.Default.warehouseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"id_Категория\", \"Инструменты\", \"Приборы\", \"Аппараты\", \"Оборудование\", \"Рас" +
                "ходные_материалы\" FROM \"public\".\"Категория\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(warehouseDataSet.КатегорияDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual warehouseDataSet.КатегорияDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            warehouseDataSet.КатегорияDataTable dataTable = new warehouseDataSet.КатегорияDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(warehouseDataSet.КатегорияDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(warehouseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Категория");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long @Original_id_Категория, long @Original_Инструменты, long @Original_Приборы, long @Original_Аппараты, long @Original_Оборудование, long @Original_Расходные_материалы) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(@Original_id_Категория));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(@Original_Инструменты));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(@Original_Приборы));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((long)(@Original_Аппараты));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((long)(@Original_Оборудование));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(@Original_Расходные_материалы));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long @id_Категория, long @Инструменты, long @Приборы, long @Аппараты, long @Оборудование, long @Расходные_материалы) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(@id_Категория));
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(@Инструменты));
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(@Приборы));
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(@Аппараты));
            this.Adapter.InsertCommand.Parameters[4].Value = ((long)(@Оборудование));
            this.Adapter.InsertCommand.Parameters[5].Value = ((long)(@Расходные_материалы));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long @id_Категория, long @Инструменты, long @Приборы, long @Аппараты, long @Оборудование, long @Расходные_материалы, long @Original_id_Категория, long @Original_Инструменты, long @Original_Приборы, long @Original_Аппараты, long @Original_Оборудование, long @Original_Расходные_материалы) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(@id_Категория));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(@Инструменты));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(@Приборы));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(@Аппараты));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(@Оборудование));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(@Расходные_материалы));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(@Original_id_Категория));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(@Original_Инструменты));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((long)(@Original_Приборы));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(@Original_Аппараты));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(@Original_Оборудование));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(@Original_Расходные_материалы));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long @Инструменты, long @Приборы, long @Аппараты, long @Оборудование, long @Расходные_материалы, long @Original_id_Категория, long @Original_Инструменты, long @Original_Приборы, long @Original_Аппараты, long @Original_Оборудование, long @Original_Расходные_материалы) {
            return this.Update(@Original_id_Категория, @Инструменты, @Приборы, @Аппараты, @Оборудование, @Расходные_материалы, @Original_id_Категория, @Original_Инструменты, @Original_Приборы, @Original_Аппараты, @Original_Оборудование, @Original_Расходные_материалы);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class КладовщикTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public КладовщикTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Кладовщик";
            tableMapping.ColumnMappings.Add("id_Кладовщик", "id_Кладовщик");
            tableMapping.ColumnMappings.Add("id_Сотрудники", "id_Сотрудники");
            tableMapping.ColumnMappings.Add("ФИО", "ФИО");
            tableMapping.ColumnMappings.Add("Зарплата", "Зарплата");
            tableMapping.ColumnMappings.Add("Отгулы", "Отгулы");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""warehouse"".""public"".""Кладовщик"" WHERE ((""id_Кладовщик"" = @Original_id_Кладовщик) AND ((@IsNull_id_Сотрудники = 1 AND ""id_Сотрудники"" IS NULL) OR (""id_Сотрудники"" = @Original_id_Сотрудники)) AND (""ФИО"" = @Original_ФИО) AND (""Зарплата"" = @Original_Зарплата) AND (""Отгулы"" = @Original_Отгулы))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Кладовщик";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Кладовщик";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_id_Сотрудники";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "id_Сотрудники";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Сотрудники";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Сотрудники";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_ФИО";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Зарплата";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Зарплата";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Отгулы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Отгулы";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"warehouse\".\"public\".\"Кладовщик\" (\"id_Кладовщик\", \"id_Сотрудники\", \"Ф" +
                "ИО\", \"Зарплата\", \"Отгулы\") VALUES (@id_Кладовщик, @id_Сотрудники, @ФИО, @Зарплат" +
                "а, @Отгулы)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Кладовщик";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Кладовщик";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Сотрудники";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Сотрудники";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@ФИО";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Зарплата";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Зарплата";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Отгулы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Отгулы";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""warehouse"".""public"".""Кладовщик"" SET ""id_Кладовщик"" = @id_Кладовщик, ""id_Сотрудники"" = @id_Сотрудники, ""ФИО"" = @ФИО, ""Зарплата"" = @Зарплата, ""Отгулы"" = @Отгулы WHERE ((""id_Кладовщик"" = @Original_id_Кладовщик) AND ((@IsNull_id_Сотрудники = 1 AND ""id_Сотрудники"" IS NULL) OR (""id_Сотрудники"" = @Original_id_Сотрудники)) AND (""ФИО"" = @Original_ФИО) AND (""Зарплата"" = @Original_Зарплата) AND (""Отгулы"" = @Original_Отгулы))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Кладовщик";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Кладовщик";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Сотрудники";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Сотрудники";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@ФИО";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Зарплата";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Зарплата";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Отгулы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Отгулы";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Кладовщик";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Кладовщик";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_id_Сотрудники";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "id_Сотрудники";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Сотрудники";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Сотрудники";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_ФИО";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Зарплата";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Зарплата";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Отгулы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Отгулы";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::СП1.Properties.Settings.Default.warehouseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"id_Кладовщик\", \"id_Сотрудники\", \"ФИО\", \"Зарплата\", \"Отгулы\" FROM \"public\"" +
                ".\"Кладовщик\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(warehouseDataSet.КладовщикDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual warehouseDataSet.КладовщикDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            warehouseDataSet.КладовщикDataTable dataTable = new warehouseDataSet.КладовщикDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(warehouseDataSet.КладовщикDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(warehouseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Кладовщик");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long @Original_id_Кладовщик, global::System.Nullable<long> @Original_id_Сотрудники, string @Original_ФИО, long @Original_Зарплата, long @Original_Отгулы) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(@Original_id_Кладовщик));
            if ((@Original_id_Сотрудники.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(@Original_id_Сотрудники.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((@Original_ФИО == null)) {
                throw new global::System.ArgumentNullException("@Original_ФИО");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(@Original_ФИО));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((long)(@Original_Зарплата));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(@Original_Отгулы));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long @id_Кладовщик, global::System.Nullable<long> @id_Сотрудники, string @ФИО, long @Зарплата, long @Отгулы) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(@id_Кладовщик));
            if ((@id_Сотрудники.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((long)(@id_Сотрудники.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((@ФИО == null)) {
                throw new global::System.ArgumentNullException("@ФИО");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@ФИО));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(@Зарплата));
            this.Adapter.InsertCommand.Parameters[4].Value = ((long)(@Отгулы));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long @id_Кладовщик, global::System.Nullable<long> @id_Сотрудники, string @ФИО, long @Зарплата, long @Отгулы, long @Original_id_Кладовщик, global::System.Nullable<long> @Original_id_Сотрудники, string @Original_ФИО, long @Original_Зарплата, long @Original_Отгулы) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(@id_Кладовщик));
            if ((@id_Сотрудники.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(@id_Сотрудники.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((@ФИО == null)) {
                throw new global::System.ArgumentNullException("@ФИО");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@ФИО));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(@Зарплата));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(@Отгулы));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(@Original_id_Кладовщик));
            if ((@Original_id_Сотрудники.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(@Original_id_Сотрудники.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((@Original_ФИО == null)) {
                throw new global::System.ArgumentNullException("@Original_ФИО");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(@Original_ФИО));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(@Original_Зарплата));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(@Original_Отгулы));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<long> @id_Сотрудники, string @ФИО, long @Зарплата, long @Отгулы, long @Original_id_Кладовщик, global::System.Nullable<long> @Original_id_Сотрудники, string @Original_ФИО, long @Original_Зарплата, long @Original_Отгулы) {
            return this.Update(@Original_id_Кладовщик, @id_Сотрудники, @ФИО, @Зарплата, @Отгулы, @Original_id_Кладовщик, @Original_id_Сотрудники, @Original_ФИО, @Original_Зарплата, @Original_Отгулы);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Материально_ответственное_лицоTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public Материально_ответственное_лицоTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Материально_ответственное_лицо";
            tableMapping.ColumnMappings.Add("id_Материально_ответственное_лицо", "id_Материально_ответственное_лицо");
            tableMapping.ColumnMappings.Add("id_Сотрудники", "id_Сотрудники");
            tableMapping.ColumnMappings.Add("ФИО", "ФИО");
            tableMapping.ColumnMappings.Add("Зарплата", "Зарплата");
            tableMapping.ColumnMappings.Add("Отгулы", "Отгулы");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""warehouse"".""public"".""Материально_ответственное_лицо"" WHERE ((""id_Материально_ответственное_лицо"" = @Original_id_Материально_ответственное_лицо) AND ((@IsNull_id_Сотрудники = 1 AND ""id_Сотрудники"" IS NULL) OR (""id_Сотрудники"" = @Original_id_Сотрудники)) AND (""ФИО"" = @Original_ФИО) AND (""Зарплата"" = @Original_Зарплата) AND (""Отгулы"" = @Original_Отгулы))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Материально_ответственное_лицо";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Материально_ответственное_лицо";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_id_Сотрудники";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "id_Сотрудники";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Сотрудники";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Сотрудники";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_ФИО";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Зарплата";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Зарплата";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Отгулы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Отгулы";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"warehouse\".\"public\".\"Материально_ответственное_лицо\" (\"id_Материальн" +
                "о_ответственное_лицо\", \"id_Сотрудники\", \"ФИО\", \"Зарплата\", \"Отгулы\") VALUES (@id" +
                "_Материально_ответственное_лицо, @id_Сотрудники, @ФИО, @Зарплата, @Отгулы)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Материально_ответственное_лицо";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Материально_ответственное_лицо";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Сотрудники";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Сотрудники";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@ФИО";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Зарплата";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Зарплата";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Отгулы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Отгулы";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""warehouse"".""public"".""Материально_ответственное_лицо"" SET ""id_Материально_ответственное_лицо"" = @id_Материально_ответственное_лицо, ""id_Сотрудники"" = @id_Сотрудники, ""ФИО"" = @ФИО, ""Зарплата"" = @Зарплата, ""Отгулы"" = @Отгулы WHERE ((""id_Материально_ответственное_лицо"" = @Original_id_Материально_ответственное_лицо) AND ((@IsNull_id_Сотрудники = 1 AND ""id_Сотрудники"" IS NULL) OR (""id_Сотрудники"" = @Original_id_Сотрудники)) AND (""ФИО"" = @Original_ФИО) AND (""Зарплата"" = @Original_Зарплата) AND (""Отгулы"" = @Original_Отгулы))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Материально_ответственное_лицо";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Материально_ответственное_лицо";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Сотрудники";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Сотрудники";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@ФИО";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Зарплата";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Зарплата";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Отгулы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Отгулы";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Материально_ответственное_лицо";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Материально_ответственное_лицо";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_id_Сотрудники";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "id_Сотрудники";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Сотрудники";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Сотрудники";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_ФИО";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Зарплата";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Зарплата";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Отгулы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Отгулы";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::СП1.Properties.Settings.Default.warehouseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"id_Материально_ответственное_лицо\", \"id_Сотрудники\", \"ФИО\", \"Зарплата\", \"" +
                "Отгулы\" FROM \"public\".\"Материально_ответственное_лицо\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(warehouseDataSet.Материально_ответственное_лицоDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual warehouseDataSet.Материально_ответственное_лицоDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            warehouseDataSet.Материально_ответственное_лицоDataTable dataTable = new warehouseDataSet.Материально_ответственное_лицоDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(warehouseDataSet.Материально_ответственное_лицоDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(warehouseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Материально_ответственное_лицо");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long @Original_id_Материально_ответственное_лицо, global::System.Nullable<long> @Original_id_Сотрудники, string @Original_ФИО, long @Original_Зарплата, long @Original_Отгулы) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(@Original_id_Материально_ответственное_лицо));
            if ((@Original_id_Сотрудники.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(@Original_id_Сотрудники.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((@Original_ФИО == null)) {
                throw new global::System.ArgumentNullException("@Original_ФИО");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(@Original_ФИО));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((long)(@Original_Зарплата));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(@Original_Отгулы));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long @id_Материально_ответственное_лицо, global::System.Nullable<long> @id_Сотрудники, string @ФИО, long @Зарплата, long @Отгулы) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(@id_Материально_ответственное_лицо));
            if ((@id_Сотрудники.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((long)(@id_Сотрудники.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((@ФИО == null)) {
                throw new global::System.ArgumentNullException("@ФИО");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@ФИО));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(@Зарплата));
            this.Adapter.InsertCommand.Parameters[4].Value = ((long)(@Отгулы));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long @id_Материально_ответственное_лицо, global::System.Nullable<long> @id_Сотрудники, string @ФИО, long @Зарплата, long @Отгулы, long @Original_id_Материально_ответственное_лицо, global::System.Nullable<long> @Original_id_Сотрудники, string @Original_ФИО, long @Original_Зарплата, long @Original_Отгулы) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(@id_Материально_ответственное_лицо));
            if ((@id_Сотрудники.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(@id_Сотрудники.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((@ФИО == null)) {
                throw new global::System.ArgumentNullException("@ФИО");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@ФИО));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(@Зарплата));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(@Отгулы));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(@Original_id_Материально_ответственное_лицо));
            if ((@Original_id_Сотрудники.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(@Original_id_Сотрудники.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((@Original_ФИО == null)) {
                throw new global::System.ArgumentNullException("@Original_ФИО");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(@Original_ФИО));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(@Original_Зарплата));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(@Original_Отгулы));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<long> @id_Сотрудники, string @ФИО, long @Зарплата, long @Отгулы, long @Original_id_Материально_ответственное_лицо, global::System.Nullable<long> @Original_id_Сотрудники, string @Original_ФИО, long @Original_Зарплата, long @Original_Отгулы) {
            return this.Update(@Original_id_Материально_ответственное_лицо, @id_Сотрудники, @ФИО, @Зарплата, @Отгулы, @Original_id_Материально_ответственное_лицо, @Original_id_Сотрудники, @Original_ФИО, @Original_Зарплата, @Original_Отгулы);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class НакладнаяTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public НакладнаяTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Накладная";
            tableMapping.ColumnMappings.Add("id_Накладная", "id_Накладная");
            tableMapping.ColumnMappings.Add("Стоимость", "Стоимость");
            tableMapping.ColumnMappings.Add("НДС_налог", "НДС_налог");
            tableMapping.ColumnMappings.Add("Вид_товара", "Вид_товара");
            tableMapping.ColumnMappings.Add("Количество_товаров", "Количество_товаров");
            tableMapping.ColumnMappings.Add("Готова_к_выдаче", "Готова_к_выдаче");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""warehouse"".""public"".""Накладная"" WHERE ((""id_Накладная"" = @Original_id_Накладная) AND (""Стоимость"" = @Original_Стоимость) AND (""НДС_налог"" = @Original_НДС_налог) AND (""Вид_товара"" = @Original_Вид_товара) AND (""Количество_товаров"" = @Original_Количество_товаров) AND (""Готова_к_выдаче"" = @Original_Готова_к_выдаче))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Накладная";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Накладная";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Стоимость";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Стоимость";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_НДС_налог";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "НДС_налог";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Вид_товара";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Вид_товара";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Количество_товаров";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Количество_товаров";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Готова_к_выдаче";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Готова_к_выдаче";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"warehouse\".\"public\".\"Накладная\" (\"id_Накладная\", \"Стоимость\", \"НДС_н" +
                "алог\", \"Вид_товара\", \"Количество_товаров\", \"Готова_к_выдаче\") VALUES (@id_Наклад" +
                "ная, @Стоимость, @НДС_налог, @Вид_товара, @Количество_товаров, @Готова_к_выдаче)" +
                "";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Накладная";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Накладная";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Стоимость";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Стоимость";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@НДС_налог";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "НДС_налог";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Вид_товара";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Вид_товара";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Количество_товаров";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Количество_товаров";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Готова_к_выдаче";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Готова_к_выдаче";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""warehouse"".""public"".""Накладная"" SET ""id_Накладная"" = @id_Накладная, ""Стоимость"" = @Стоимость, ""НДС_налог"" = @НДС_налог, ""Вид_товара"" = @Вид_товара, ""Количество_товаров"" = @Количество_товаров, ""Готова_к_выдаче"" = @Готова_к_выдаче WHERE ((""id_Накладная"" = @Original_id_Накладная) AND (""Стоимость"" = @Original_Стоимость) AND (""НДС_налог"" = @Original_НДС_налог) AND (""Вид_товара"" = @Original_Вид_товара) AND (""Количество_товаров"" = @Original_Количество_товаров) AND (""Готова_к_выдаче"" = @Original_Готова_к_выдаче))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Накладная";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Накладная";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Стоимость";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Стоимость";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@НДС_налог";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "НДС_налог";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Вид_товара";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Вид_товара";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Количество_товаров";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Количество_товаров";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Готова_к_выдаче";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Готова_к_выдаче";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Накладная";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Накладная";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Стоимость";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Стоимость";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_НДС_налог";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "НДС_налог";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Вид_товара";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Вид_товара";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Количество_товаров";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Количество_товаров";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Готова_к_выдаче";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Готова_к_выдаче";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::СП1.Properties.Settings.Default.warehouseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"id_Накладная\", \"Стоимость\", \"НДС_налог\", \"Вид_товара\", \"Количество_товаро" +
                "в\", \"Готова_к_выдаче\" FROM \"public\".\"Накладная\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(warehouseDataSet.НакладнаяDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual warehouseDataSet.НакладнаяDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            warehouseDataSet.НакладнаяDataTable dataTable = new warehouseDataSet.НакладнаяDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(warehouseDataSet.НакладнаяDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(warehouseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Накладная");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long @Original_id_Накладная, long @Original_Стоимость, string @Original_НДС_налог, string @Original_Вид_товара, long @Original_Количество_товаров, string @Original_Готова_к_выдаче) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(@Original_id_Накладная));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(@Original_Стоимость));
            if ((@Original_НДС_налог == null)) {
                throw new global::System.ArgumentNullException("@Original_НДС_налог");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(@Original_НДС_налог));
            }
            if ((@Original_Вид_товара == null)) {
                throw new global::System.ArgumentNullException("@Original_Вид_товара");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(@Original_Вид_товара));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((long)(@Original_Количество_товаров));
            if ((@Original_Готова_к_выдаче == null)) {
                throw new global::System.ArgumentNullException("@Original_Готова_к_выдаче");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(@Original_Готова_к_выдаче));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long @id_Накладная, long @Стоимость, string @НДС_налог, string @Вид_товара, long @Количество_товаров, string @Готова_к_выдаче) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(@id_Накладная));
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(@Стоимость));
            if ((@НДС_налог == null)) {
                throw new global::System.ArgumentNullException("@НДС_налог");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@НДС_налог));
            }
            if ((@Вид_товара == null)) {
                throw new global::System.ArgumentNullException("@Вид_товара");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(@Вид_товара));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((long)(@Количество_товаров));
            if ((@Готова_к_выдаче == null)) {
                throw new global::System.ArgumentNullException("@Готова_к_выдаче");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(@Готова_к_выдаче));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long @id_Накладная, long @Стоимость, string @НДС_налог, string @Вид_товара, long @Количество_товаров, string @Готова_к_выдаче, long @Original_id_Накладная, long @Original_Стоимость, string @Original_НДС_налог, string @Original_Вид_товара, long @Original_Количество_товаров, string @Original_Готова_к_выдаче) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(@id_Накладная));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(@Стоимость));
            if ((@НДС_налог == null)) {
                throw new global::System.ArgumentNullException("@НДС_налог");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@НДС_налог));
            }
            if ((@Вид_товара == null)) {
                throw new global::System.ArgumentNullException("@Вид_товара");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(@Вид_товара));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(@Количество_товаров));
            if ((@Готова_к_выдаче == null)) {
                throw new global::System.ArgumentNullException("@Готова_к_выдаче");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(@Готова_к_выдаче));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(@Original_id_Накладная));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(@Original_Стоимость));
            if ((@Original_НДС_налог == null)) {
                throw new global::System.ArgumentNullException("@Original_НДС_налог");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(@Original_НДС_налог));
            }
            if ((@Original_Вид_товара == null)) {
                throw new global::System.ArgumentNullException("@Original_Вид_товара");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(@Original_Вид_товара));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(@Original_Количество_товаров));
            if ((@Original_Готова_к_выдаче == null)) {
                throw new global::System.ArgumentNullException("@Original_Готова_к_выдаче");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(@Original_Готова_к_выдаче));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long @Стоимость, string @НДС_налог, string @Вид_товара, long @Количество_товаров, string @Готова_к_выдаче, long @Original_id_Накладная, long @Original_Стоимость, string @Original_НДС_налог, string @Original_Вид_товара, long @Original_Количество_товаров, string @Original_Готова_к_выдаче) {
            return this.Update(@Original_id_Накладная, @Стоимость, @НДС_налог, @Вид_товара, @Количество_товаров, @Готова_к_выдаче, @Original_id_Накладная, @Original_Стоимость, @Original_НДС_налог, @Original_Вид_товара, @Original_Количество_товаров, @Original_Готова_к_выдаче);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ПоставщикTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ПоставщикTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Поставщик";
            tableMapping.ColumnMappings.Add("id_Поставщик", "id_Поставщик");
            tableMapping.ColumnMappings.Add("Код", "Код");
            tableMapping.ColumnMappings.Add("Страна", "Страна");
            tableMapping.ColumnMappings.Add("Предприятие", "Предприятие");
            tableMapping.ColumnMappings.Add("Дата_следующей_поставки", "Дата_следующей_поставки");
            tableMapping.ColumnMappings.Add("Дата_прошлой_поставки", "Дата_прошлой_поставки");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""warehouse"".""public"".""Поставщик"" WHERE ((""id_Поставщик"" = @Original_id_Поставщик) AND (""Код"" = @Original_Код) AND (""Страна"" = @Original_Страна) AND (""Предприятие"" = @Original_Предприятие) AND (""Дата_следующей_поставки"" = @Original_Дата_следующей_поставки) AND (""Дата_прошлой_поставки"" = @Original_Дата_прошлой_поставки))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Поставщик";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Поставщик";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Код";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Код";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Страна";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Страна";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Предприятие";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Предприятие";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Дата_следующей_поставки";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Дата_следующей_поставки";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Дата_прошлой_поставки";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Дата_прошлой_поставки";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"warehouse\".\"public\".\"Поставщик\" (\"id_Поставщик\", \"Код\", \"Страна\", \"П" +
                "редприятие\", \"Дата_следующей_поставки\", \"Дата_прошлой_поставки\") VALUES (@id_Пос" +
                "тавщик, @Код, @Страна, @Предприятие, @Дата_следующей_поставки, @Дата_прошлой_пос" +
                "тавки)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Поставщик";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Поставщик";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Код";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Код";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Страна";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Страна";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Предприятие";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Предприятие";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Дата_следующей_поставки";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Дата_следующей_поставки";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Дата_прошлой_поставки";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Дата_прошлой_поставки";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""warehouse"".""public"".""Поставщик"" SET ""id_Поставщик"" = @id_Поставщик, ""Код"" = @Код, ""Страна"" = @Страна, ""Предприятие"" = @Предприятие, ""Дата_следующей_поставки"" = @Дата_следующей_поставки, ""Дата_прошлой_поставки"" = @Дата_прошлой_поставки WHERE ((""id_Поставщик"" = @Original_id_Поставщик) AND (""Код"" = @Original_Код) AND (""Страна"" = @Original_Страна) AND (""Предприятие"" = @Original_Предприятие) AND (""Дата_следующей_поставки"" = @Original_Дата_следующей_поставки) AND (""Дата_прошлой_поставки"" = @Original_Дата_прошлой_поставки))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Поставщик";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Поставщик";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Код";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Код";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Страна";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Страна";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Предприятие";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Предприятие";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Дата_следующей_поставки";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Дата_следующей_поставки";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Дата_прошлой_поставки";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Дата_прошлой_поставки";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Поставщик";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Поставщик";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Код";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Код";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Страна";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Страна";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Предприятие";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Предприятие";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Дата_следующей_поставки";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Дата_следующей_поставки";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Дата_прошлой_поставки";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "Дата_прошлой_поставки";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::СП1.Properties.Settings.Default.warehouseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"id_Поставщик\", \"Код\", \"Страна\", \"Предприятие\", \"Дата_следующей_поставки\"," +
                " \"Дата_прошлой_поставки\" FROM \"public\".\"Поставщик\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(warehouseDataSet.ПоставщикDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual warehouseDataSet.ПоставщикDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            warehouseDataSet.ПоставщикDataTable dataTable = new warehouseDataSet.ПоставщикDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(warehouseDataSet.ПоставщикDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(warehouseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Поставщик");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long @Original_id_Поставщик, long @Original_Код, string @Original_Страна, string @Original_Предприятие, System.DateTime @Original_Дата_следующей_поставки, System.DateTime @Original_Дата_прошлой_поставки) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(@Original_id_Поставщик));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(@Original_Код));
            if ((@Original_Страна == null)) {
                throw new global::System.ArgumentNullException("@Original_Страна");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(@Original_Страна));
            }
            if ((@Original_Предприятие == null)) {
                throw new global::System.ArgumentNullException("@Original_Предприятие");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(@Original_Предприятие));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(@Original_Дата_следующей_поставки));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(@Original_Дата_прошлой_поставки));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long @id_Поставщик, long @Код, string @Страна, string @Предприятие, System.DateTime @Дата_следующей_поставки, System.DateTime @Дата_прошлой_поставки) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(@id_Поставщик));
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(@Код));
            if ((@Страна == null)) {
                throw new global::System.ArgumentNullException("@Страна");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@Страна));
            }
            if ((@Предприятие == null)) {
                throw new global::System.ArgumentNullException("@Предприятие");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(@Предприятие));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(@Дата_следующей_поставки));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(@Дата_прошлой_поставки));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long @id_Поставщик, long @Код, string @Страна, string @Предприятие, System.DateTime @Дата_следующей_поставки, System.DateTime @Дата_прошлой_поставки, long @Original_id_Поставщик, long @Original_Код, string @Original_Страна, string @Original_Предприятие, System.DateTime @Original_Дата_следующей_поставки, System.DateTime @Original_Дата_прошлой_поставки) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(@id_Поставщик));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(@Код));
            if ((@Страна == null)) {
                throw new global::System.ArgumentNullException("@Страна");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@Страна));
            }
            if ((@Предприятие == null)) {
                throw new global::System.ArgumentNullException("@Предприятие");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(@Предприятие));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(@Дата_следующей_поставки));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(@Дата_прошлой_поставки));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(@Original_id_Поставщик));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(@Original_Код));
            if ((@Original_Страна == null)) {
                throw new global::System.ArgumentNullException("@Original_Страна");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(@Original_Страна));
            }
            if ((@Original_Предприятие == null)) {
                throw new global::System.ArgumentNullException("@Original_Предприятие");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(@Original_Предприятие));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(@Original_Дата_следующей_поставки));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(@Original_Дата_прошлой_поставки));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long @Код, string @Страна, string @Предприятие, System.DateTime @Дата_следующей_поставки, System.DateTime @Дата_прошлой_поставки, long @Original_id_Поставщик, long @Original_Код, string @Original_Страна, string @Original_Предприятие, System.DateTime @Original_Дата_следующей_поставки, System.DateTime @Original_Дата_прошлой_поставки) {
            return this.Update(@Original_id_Поставщик, @Код, @Страна, @Предприятие, @Дата_следующей_поставки, @Дата_прошлой_поставки, @Original_id_Поставщик, @Original_Код, @Original_Страна, @Original_Предприятие, @Original_Дата_следующей_поставки, @Original_Дата_прошлой_поставки);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class СотрудникиTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public СотрудникиTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Сотрудники";
            tableMapping.ColumnMappings.Add("id_Сотрудники", "id_Сотрудники");
            tableMapping.ColumnMappings.Add("ФИО", "ФИО");
            tableMapping.ColumnMappings.Add("Должность", "Должность");
            tableMapping.ColumnMappings.Add("Отгулы", "Отгулы");
            tableMapping.ColumnMappings.Add("Стаж_работы", "Стаж_работы");
            tableMapping.ColumnMappings.Add("Зарплата", "Зарплата");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""warehouse"".""public"".""Сотрудники"" WHERE ((""id_Сотрудники"" = @Original_id_Сотрудники) AND (""ФИО"" = @Original_ФИО) AND (""Должность"" = @Original_Должность) AND (""Отгулы"" = @Original_Отгулы) AND (""Стаж_работы"" = @Original_Стаж_работы) AND (""Зарплата"" = @Original_Зарплата))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Сотрудники";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Сотрудники";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_ФИО";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Должность";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Должность";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Отгулы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Отгулы";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Стаж_работы";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Стаж_работы";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Зарплата";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Зарплата";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"warehouse\".\"public\".\"Сотрудники\" (\"id_Сотрудники\", \"ФИО\", \"Должность" +
                "\", \"Отгулы\", \"Стаж_работы\", \"Зарплата\") VALUES (@id_Сотрудники, @ФИО, @Должность" +
                ", @Отгулы, @Стаж_работы, @Зарплата)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Сотрудники";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Сотрудники";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@ФИО";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Должность";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Должность";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Отгулы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Отгулы";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Стаж_работы";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Стаж_работы";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Зарплата";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Зарплата";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""warehouse"".""public"".""Сотрудники"" SET ""id_Сотрудники"" = @id_Сотрудники, ""ФИО"" = @ФИО, ""Должность"" = @Должность, ""Отгулы"" = @Отгулы, ""Стаж_работы"" = @Стаж_работы, ""Зарплата"" = @Зарплата WHERE ((""id_Сотрудники"" = @Original_id_Сотрудники) AND (""ФИО"" = @Original_ФИО) AND (""Должность"" = @Original_Должность) AND (""Отгулы"" = @Original_Отгулы) AND (""Стаж_работы"" = @Original_Стаж_работы) AND (""Зарплата"" = @Original_Зарплата))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Сотрудники";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Сотрудники";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@ФИО";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Должность";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Должность";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Отгулы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Отгулы";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Стаж_работы";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Стаж_работы";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Зарплата";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Зарплата";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Сотрудники";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Сотрудники";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_ФИО";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Должность";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Должность";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Отгулы";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Отгулы";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Стаж_работы";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Стаж_работы";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Зарплата";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Зарплата";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::СП1.Properties.Settings.Default.warehouseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"id_Сотрудники\", \"ФИО\", \"Должность\", \"Отгулы\", \"Стаж_работы\", \"Зарплата\" F" +
                "ROM \"public\".\"Сотрудники\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(warehouseDataSet.СотрудникиDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual warehouseDataSet.СотрудникиDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            warehouseDataSet.СотрудникиDataTable dataTable = new warehouseDataSet.СотрудникиDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(warehouseDataSet.СотрудникиDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(warehouseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Сотрудники");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long @Original_id_Сотрудники, string @Original_ФИО, string @Original_Должность, long @Original_Отгулы, string @Original_Стаж_работы, long @Original_Зарплата) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(@Original_id_Сотрудники));
            if ((@Original_ФИО == null)) {
                throw new global::System.ArgumentNullException("@Original_ФИО");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(@Original_ФИО));
            }
            if ((@Original_Должность == null)) {
                throw new global::System.ArgumentNullException("@Original_Должность");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(@Original_Должность));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((long)(@Original_Отгулы));
            if ((@Original_Стаж_работы == null)) {
                throw new global::System.ArgumentNullException("@Original_Стаж_работы");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(@Original_Стаж_работы));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(@Original_Зарплата));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long @id_Сотрудники, string @ФИО, string @Должность, long @Отгулы, string @Стаж_работы, long @Зарплата) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(@id_Сотрудники));
            if ((@ФИО == null)) {
                throw new global::System.ArgumentNullException("@ФИО");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(@ФИО));
            }
            if ((@Должность == null)) {
                throw new global::System.ArgumentNullException("@Должность");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@Должность));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(@Отгулы));
            if ((@Стаж_работы == null)) {
                throw new global::System.ArgumentNullException("@Стаж_работы");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(@Стаж_работы));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((long)(@Зарплата));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long @id_Сотрудники, string @ФИО, string @Должность, long @Отгулы, string @Стаж_работы, long @Зарплата, long @Original_id_Сотрудники, string @Original_ФИО, string @Original_Должность, long @Original_Отгулы, string @Original_Стаж_работы, long @Original_Зарплата) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(@id_Сотрудники));
            if ((@ФИО == null)) {
                throw new global::System.ArgumentNullException("@ФИО");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(@ФИО));
            }
            if ((@Должность == null)) {
                throw new global::System.ArgumentNullException("@Должность");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@Должность));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(@Отгулы));
            if ((@Стаж_работы == null)) {
                throw new global::System.ArgumentNullException("@Стаж_работы");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(@Стаж_работы));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(@Зарплата));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(@Original_id_Сотрудники));
            if ((@Original_ФИО == null)) {
                throw new global::System.ArgumentNullException("@Original_ФИО");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(@Original_ФИО));
            }
            if ((@Original_Должность == null)) {
                throw new global::System.ArgumentNullException("@Original_Должность");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(@Original_Должность));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(@Original_Отгулы));
            if ((@Original_Стаж_работы == null)) {
                throw new global::System.ArgumentNullException("@Original_Стаж_работы");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(@Original_Стаж_работы));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(@Original_Зарплата));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string @ФИО, string @Должность, long @Отгулы, string @Стаж_работы, long @Зарплата, long @Original_id_Сотрудники, string @Original_ФИО, string @Original_Должность, long @Original_Отгулы, string @Original_Стаж_работы, long @Original_Зарплата) {
            return this.Update(@Original_id_Сотрудники, @ФИО, @Должность, @Отгулы, @Стаж_работы, @Зарплата, @Original_id_Сотрудники, @Original_ФИО, @Original_Должность, @Original_Отгулы, @Original_Стаж_работы, @Original_Зарплата);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ТорварTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ТорварTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Торвар";
            tableMapping.ColumnMappings.Add("id_Товар", "id_Товар");
            tableMapping.ColumnMappings.Add("id_Категория", "id_Категория");
            tableMapping.ColumnMappings.Add("Номер", "Номер");
            tableMapping.ColumnMappings.Add("Страна", "Страна");
            tableMapping.ColumnMappings.Add("Название", "Название");
            tableMapping.ColumnMappings.Add("Производитель", "Производитель");
            tableMapping.ColumnMappings.Add("Количество_товаров_на_складе", "Количество_товаров_на_складе");
            tableMapping.ColumnMappings.Add("Серия", "Серия");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""warehouse"".""public"".""Торвар"" WHERE ((""id_Товар"" = @Original_id_Товар) AND ((@IsNull_id_Категория = 1 AND ""id_Категория"" IS NULL) OR (""id_Категория"" = @Original_id_Категория)) AND (""Номер"" = @Original_Номер) AND (""Страна"" = @Original_Страна) AND (""Название"" = @Original_Название) AND (""Производитель"" = @Original_Производитель) AND (""Количество_товаров_на_складе"" = @Original_Количество_товаров_на_складе) AND (""Серия"" = @Original_Серия))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Товар";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Товар";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_id_Категория";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "id_Категория";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Категория";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Категория";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Номер";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Номер";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Страна";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Страна";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Название";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Название";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Производитель";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Производитель";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Количество_товаров_на_складе";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Количество_товаров_на_складе";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Серия";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Серия";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""warehouse"".""public"".""Торвар"" (""id_Товар"", ""id_Категория"", ""Номер"", ""Страна"", ""Название"", ""Производитель"", ""Количество_товаров_на_складе"", ""Серия"") VALUES (@id_Товар, @id_Категория, @Номер, @Страна, @Название, @Производитель, @Количество_товаров_на_складе, @Серия)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Товар";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Товар";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Категория";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Категория";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Номер";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Номер";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Страна";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Страна";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Название";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Название";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Производитель";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Производитель";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Количество_товаров_на_складе";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Количество_товаров_на_складе";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Серия";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Серия";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""warehouse"".""public"".""Торвар"" SET ""id_Товар"" = @id_Товар, ""id_Категория"" = @id_Категория, ""Номер"" = @Номер, ""Страна"" = @Страна, ""Название"" = @Название, ""Производитель"" = @Производитель, ""Количество_товаров_на_складе"" = @Количество_товаров_на_складе, ""Серия"" = @Серия WHERE ((""id_Товар"" = @Original_id_Товар) AND ((@IsNull_id_Категория = 1 AND ""id_Категория"" IS NULL) OR (""id_Категория"" = @Original_id_Категория)) AND (""Номер"" = @Original_Номер) AND (""Страна"" = @Original_Страна) AND (""Название"" = @Original_Название) AND (""Производитель"" = @Original_Производитель) AND (""Количество_товаров_на_складе"" = @Original_Количество_товаров_на_складе) AND (""Серия"" = @Original_Серия))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Товар";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Товар";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_Категория";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Категория";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Номер";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Номер";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Страна";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Страна";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Название";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Название";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Производитель";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Производитель";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Количество_товаров_на_складе";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Количество_товаров_на_складе";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Серия";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Серия";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Товар";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Товар";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_id_Категория";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "id_Категория";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_Категория";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_Категория";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Номер";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Номер";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Страна";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Страна";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Название";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Название";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Производитель";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "Производитель";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Количество_товаров_на_складе";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Количество_товаров_на_складе";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_Серия";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "Серия";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::СП1.Properties.Settings.Default.warehouseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"id_Товар\", \"id_Категория\", \"Номер\", \"Страна\", \"Название\", \"Производитель\"" +
                ", \"Количество_товаров_на_складе\", \"Серия\" FROM \"public\".\"Торвар\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(warehouseDataSet.ТорварDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual warehouseDataSet.ТорварDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            warehouseDataSet.ТорварDataTable dataTable = new warehouseDataSet.ТорварDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(warehouseDataSet.ТорварDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(warehouseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Торвар");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long @Original_id_Товар, global::System.Nullable<long> @Original_id_Категория, long @Original_Номер, string @Original_Страна, string @Original_Название, string @Original_Производитель, long @Original_Количество_товаров_на_складе, long @Original_Серия) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(@Original_id_Товар));
            if ((@Original_id_Категория.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(@Original_id_Категория.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((long)(@Original_Номер));
            if ((@Original_Страна == null)) {
                throw new global::System.ArgumentNullException("@Original_Страна");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(@Original_Страна));
            }
            if ((@Original_Название == null)) {
                throw new global::System.ArgumentNullException("@Original_Название");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(@Original_Название));
            }
            if ((@Original_Производитель == null)) {
                throw new global::System.ArgumentNullException("@Original_Производитель");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(@Original_Производитель));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((long)(@Original_Количество_товаров_на_складе));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((long)(@Original_Серия));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long @id_Товар, global::System.Nullable<long> @id_Категория, long @Номер, string @Страна, string @Название, string @Производитель, long @Количество_товаров_на_складе, long @Серия) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(@id_Товар));
            if ((@id_Категория.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((long)(@id_Категория.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(@Номер));
            if ((@Страна == null)) {
                throw new global::System.ArgumentNullException("@Страна");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(@Страна));
            }
            if ((@Название == null)) {
                throw new global::System.ArgumentNullException("@Название");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(@Название));
            }
            if ((@Производитель == null)) {
                throw new global::System.ArgumentNullException("@Производитель");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(@Производитель));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((long)(@Количество_товаров_на_складе));
            this.Adapter.InsertCommand.Parameters[7].Value = ((long)(@Серия));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long @id_Товар, 
                    global::System.Nullable<long> @id_Категория, 
                    long @Номер, 
                    string @Страна, 
                    string @Название, 
                    string @Производитель, 
                    long @Количество_товаров_на_складе, 
                    long @Серия, 
                    long @Original_id_Товар, 
                    global::System.Nullable<long> @Original_id_Категория, 
                    long @Original_Номер, 
                    string @Original_Страна, 
                    string @Original_Название, 
                    string @Original_Производитель, 
                    long @Original_Количество_товаров_на_складе, 
                    long @Original_Серия) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(@id_Товар));
            if ((@id_Категория.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(@id_Категория.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(@Номер));
            if ((@Страна == null)) {
                throw new global::System.ArgumentNullException("@Страна");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(@Страна));
            }
            if ((@Название == null)) {
                throw new global::System.ArgumentNullException("@Название");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(@Название));
            }
            if ((@Производитель == null)) {
                throw new global::System.ArgumentNullException("@Производитель");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(@Производитель));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(@Количество_товаров_на_складе));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(@Серия));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((long)(@Original_id_Товар));
            if ((@Original_id_Категория.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(@Original_id_Категория.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(@Original_Номер));
            if ((@Original_Страна == null)) {
                throw new global::System.ArgumentNullException("@Original_Страна");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(@Original_Страна));
            }
            if ((@Original_Название == null)) {
                throw new global::System.ArgumentNullException("@Original_Название");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(@Original_Название));
            }
            if ((@Original_Производитель == null)) {
                throw new global::System.ArgumentNullException("@Original_Производитель");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(@Original_Производитель));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((long)(@Original_Количество_товаров_на_складе));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((long)(@Original_Серия));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<long> @id_Категория, long @Номер, string @Страна, string @Название, string @Производитель, long @Количество_товаров_на_складе, long @Серия, long @Original_id_Товар, global::System.Nullable<long> @Original_id_Категория, long @Original_Номер, string @Original_Страна, string @Original_Название, string @Original_Производитель, long @Original_Количество_товаров_на_складе, long @Original_Серия) {
            return this.Update(@Original_id_Товар, @id_Категория, @Номер, @Страна, @Название, @Производитель, @Количество_товаров_на_складе, @Серия, @Original_id_Товар, @Original_id_Категория, @Original_Номер, @Original_Страна, @Original_Название, @Original_Производитель, @Original_Количество_товаров_на_складе, @Original_Серия);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ЗаказчикTableAdapter _заказчикTableAdapter;
        
        private КатегорияTableAdapter _категорияTableAdapter;
        
        private КладовщикTableAdapter _кладовщикTableAdapter;
        
        private Материально_ответственное_лицоTableAdapter _материально_ответственное_лицоTableAdapter;
        
        private НакладнаяTableAdapter _накладнаяTableAdapter;
        
        private ПоставщикTableAdapter _поставщикTableAdapter;
        
        private СотрудникиTableAdapter _сотрудникиTableAdapter;
        
        private ТорварTableAdapter _торварTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ЗаказчикTableAdapter ЗаказчикTableAdapter {
            get {
                return this._заказчикTableAdapter;
            }
            set {
                this._заказчикTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public КатегорияTableAdapter КатегорияTableAdapter {
            get {
                return this._категорияTableAdapter;
            }
            set {
                this._категорияTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public КладовщикTableAdapter КладовщикTableAdapter {
            get {
                return this._кладовщикTableAdapter;
            }
            set {
                this._кладовщикTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Материально_ответственное_лицоTableAdapter Материально_ответственное_лицоTableAdapter {
            get {
                return this._материально_ответственное_лицоTableAdapter;
            }
            set {
                this._материально_ответственное_лицоTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public НакладнаяTableAdapter НакладнаяTableAdapter {
            get {
                return this._накладнаяTableAdapter;
            }
            set {
                this._накладнаяTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ПоставщикTableAdapter ПоставщикTableAdapter {
            get {
                return this._поставщикTableAdapter;
            }
            set {
                this._поставщикTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public СотрудникиTableAdapter СотрудникиTableAdapter {
            get {
                return this._сотрудникиTableAdapter;
            }
            set {
                this._сотрудникиTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ТорварTableAdapter ТорварTableAdapter {
            get {
                return this._торварTableAdapter;
            }
            set {
                this._торварTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._заказчикTableAdapter != null) 
                            && (this._заказчикTableAdapter.Connection != null))) {
                    return this._заказчикTableAdapter.Connection;
                }
                if (((this._категорияTableAdapter != null) 
                            && (this._категорияTableAdapter.Connection != null))) {
                    return this._категорияTableAdapter.Connection;
                }
                if (((this._кладовщикTableAdapter != null) 
                            && (this._кладовщикTableAdapter.Connection != null))) {
                    return this._кладовщикTableAdapter.Connection;
                }
                if (((this._материально_ответственное_лицоTableAdapter != null) 
                            && (this._материально_ответственное_лицоTableAdapter.Connection != null))) {
                    return this._материально_ответственное_лицоTableAdapter.Connection;
                }
                if (((this._накладнаяTableAdapter != null) 
                            && (this._накладнаяTableAdapter.Connection != null))) {
                    return this._накладнаяTableAdapter.Connection;
                }
                if (((this._поставщикTableAdapter != null) 
                            && (this._поставщикTableAdapter.Connection != null))) {
                    return this._поставщикTableAdapter.Connection;
                }
                if (((this._сотрудникиTableAdapter != null) 
                            && (this._сотрудникиTableAdapter.Connection != null))) {
                    return this._сотрудникиTableAdapter.Connection;
                }
                if (((this._торварTableAdapter != null) 
                            && (this._торварTableAdapter.Connection != null))) {
                    return this._торварTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._заказчикTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._категорияTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._кладовщикTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._материально_ответственное_лицоTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._накладнаяTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._поставщикTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._сотрудникиTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._торварTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(warehouseDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._заказчикTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Заказчик.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._заказчикTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._категорияTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Категория.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._категорияTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._кладовщикTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Кладовщик.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._кладовщикTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._материально_ответственное_лицоTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Материально_ответственное_лицо.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._материально_ответственное_лицоTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._накладнаяTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Накладная.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._накладнаяTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._поставщикTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Поставщик.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._поставщикTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._сотрудникиTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Сотрудники.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._сотрудникиTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._торварTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Торвар.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._торварTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(warehouseDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._заказчикTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Заказчик.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._заказчикTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._категорияTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Категория.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._категорияTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._кладовщикTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Кладовщик.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._кладовщикTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._материально_ответственное_лицоTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Материально_ответственное_лицо.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._материально_ответственное_лицоTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._накладнаяTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Накладная.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._накладнаяTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._поставщикTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Поставщик.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._поставщикTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._сотрудникиTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Сотрудники.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._сотрудникиTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._торварTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Торвар.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._торварTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(warehouseDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._торварTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Торвар.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._торварTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._сотрудникиTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Сотрудники.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._сотрудникиTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._поставщикTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Поставщик.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._поставщикTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._накладнаяTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Накладная.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._накладнаяTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._материально_ответственное_лицоTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Материально_ответственное_лицо.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._материально_ответственное_лицоTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._кладовщикTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Кладовщик.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._кладовщикTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._категорияTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Категория.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._категорияTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._заказчикTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Заказчик.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._заказчикTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(warehouseDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._заказчикTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._заказчикTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._категорияTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._категорияTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._кладовщикTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._кладовщикTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._материально_ответственное_лицоTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._материально_ответственное_лицоTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._накладнаяTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._накладнаяTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._поставщикTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._поставщикTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._сотрудникиTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._сотрудникиTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._торварTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._торварTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._заказчикTableAdapter != null)) {
                    revertConnections.Add(this._заказчикTableAdapter, this._заказчикTableAdapter.Connection);
                    this._заказчикTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._заказчикTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._заказчикTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._заказчикTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._заказчикTableAdapter.Adapter);
                    }
                }
                if ((this._категорияTableAdapter != null)) {
                    revertConnections.Add(this._категорияTableAdapter, this._категорияTableAdapter.Connection);
                    this._категорияTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._категорияTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._категорияTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._категорияTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._категорияTableAdapter.Adapter);
                    }
                }
                if ((this._кладовщикTableAdapter != null)) {
                    revertConnections.Add(this._кладовщикTableAdapter, this._кладовщикTableAdapter.Connection);
                    this._кладовщикTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._кладовщикTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._кладовщикTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._кладовщикTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._кладовщикTableAdapter.Adapter);
                    }
                }
                if ((this._материально_ответственное_лицоTableAdapter != null)) {
                    revertConnections.Add(this._материально_ответственное_лицоTableAdapter, this._материально_ответственное_лицоTableAdapter.Connection);
                    this._материально_ответственное_лицоTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._материально_ответственное_лицоTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._материально_ответственное_лицоTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._материально_ответственное_лицоTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._материально_ответственное_лицоTableAdapter.Adapter);
                    }
                }
                if ((this._накладнаяTableAdapter != null)) {
                    revertConnections.Add(this._накладнаяTableAdapter, this._накладнаяTableAdapter.Connection);
                    this._накладнаяTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._накладнаяTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._накладнаяTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._накладнаяTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._накладнаяTableAdapter.Adapter);
                    }
                }
                if ((this._поставщикTableAdapter != null)) {
                    revertConnections.Add(this._поставщикTableAdapter, this._поставщикTableAdapter.Connection);
                    this._поставщикTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._поставщикTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._поставщикTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._поставщикTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._поставщикTableAdapter.Adapter);
                    }
                }
                if ((this._сотрудникиTableAdapter != null)) {
                    revertConnections.Add(this._сотрудникиTableAdapter, this._сотрудникиTableAdapter.Connection);
                    this._сотрудникиTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._сотрудникиTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._сотрудникиTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._сотрудникиTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._сотрудникиTableAdapter.Adapter);
                    }
                }
                if ((this._торварTableAdapter != null)) {
                    revertConnections.Add(this._торварTableAdapter, this._торварTableAdapter.Connection);
                    this._торварTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._торварTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._торварTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._торварTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._торварTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._заказчикTableAdapter != null)) {
                    this._заказчикTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._заказчикTableAdapter]));
                    this._заказчикTableAdapter.Transaction = null;
                }
                if ((this._категорияTableAdapter != null)) {
                    this._категорияTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._категорияTableAdapter]));
                    this._категорияTableAdapter.Transaction = null;
                }
                if ((this._кладовщикTableAdapter != null)) {
                    this._кладовщикTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._кладовщикTableAdapter]));
                    this._кладовщикTableAdapter.Transaction = null;
                }
                if ((this._материально_ответственное_лицоTableAdapter != null)) {
                    this._материально_ответственное_лицоTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._материально_ответственное_лицоTableAdapter]));
                    this._материально_ответственное_лицоTableAdapter.Transaction = null;
                }
                if ((this._накладнаяTableAdapter != null)) {
                    this._накладнаяTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._накладнаяTableAdapter]));
                    this._накладнаяTableAdapter.Transaction = null;
                }
                if ((this._поставщикTableAdapter != null)) {
                    this._поставщикTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._поставщикTableAdapter]));
                    this._поставщикTableAdapter.Transaction = null;
                }
                if ((this._сотрудникиTableAdapter != null)) {
                    this._сотрудникиTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._сотрудникиTableAdapter]));
                    this._сотрудникиTableAdapter.Transaction = null;
                }
                if ((this._торварTableAdapter != null)) {
                    this._торварTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._торварTableAdapter]));
                    this._торварTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591